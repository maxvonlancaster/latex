LaTeX2e
*******

Este documento es un manual de referencia extraoficial para LaTeX, un
sistema de preparación de documentos, versión Julio 2010.  Este se
pretende que cubra LaTeX2e, que ha sido la versión estándar de LaTeX por
muchos años.

   LaTeX está implementado como un paquete de macros por Donald E.
Knuth's para el programa de composición tipográfica TeX.  LaTeX
originalmente fue creado por Leslie Lamport; este ahora es mantenido por
un grupo de voluntarios en (`http://latex-project.org').  La
documentación oficial escrita por el proyecto LaTeX está disponible
allí.  Una vez más, el presente documento no es oficial y no ha sido
revisado por los responsables del proyecto LaTeX.

1 Descripción de LaTeX
**********************

Las instrucciones LaTeX componen tipográficamente un archivo de texto
usando el programa TeX y el “paquete de macros” LaTeX para TeX.  Para
ser más específicos, este procesa un archivo de entrada que contiene el
texto de un documento con instrucciones intercaladas que describen cómo
se debe dar formato al texto.  Este produce al menos tres archivos de
salida:

  1. Un archivo de salida principal, que es uno de:

       1. Si se invoca como `latex', un archivo “independiente del
          dispositivo” (`.dvi'). Este contiene las instrucciones que se
          pueden traducir en órdenes para una variedad de dispositivos
          de salida.  Usted puede ver estos archivos `.dvi' producidos
          por LaTeX utilizando un programa como `xdvi' (visualización
          directa) o `dvips' (los convierte a PostScript).

       2. Si es invocado como `pdflatex', produce un archivo de
          “Documento de Formato Portátil” (`.pdf').  Normalmente, este
          es un archivo autocontenido, con todos los tipos de letra e
          imágenes incrustadas.  Este puede ser muy útil, pero hace que
          produzca un archivo mucho más grande que el `.dvi' producido a
          partir del mismo documento.

     Existen otras variantes menos comunes de LaTeX (y TeX), de modo que
     puede producir HTML, XML y otras cosas.

  2. Un archivo de“transcripción” o `.log' que contiene información
     resumida y mensajes de diagnóstico para cualquier error descubierto
     en el archivo de entrada.

  3. Un archivo “auxiliar” o `.aux'. Este es usado por LaTeX mismo, para
     diversas cosas como el seccionado.

   Una instrucción LaTeX comienza con el nombre de la instrucción, la
cual consiste de una `\' seguida por o bien (a) una cadena de letras o
(b) un único carácter no letra.  Los argumentos que figuran entre
corchetes, `[]', son opcionales, mientras que los argumentos contenidos
entre llaves, `{}', son obligatorios.

   LaTeX es sensible a mayúsculas y minúsculas.  Ingrese todas las
instrucciones en minúsculas a menos que explícitamente se diga otra
cosa.

2 Iniciando y Finalizando
*************************

Un archivo de entrada mínimo tiene el siguiente aspecto:

     \documentclass{clase}
     \begin{document}
     su texto
     \end{document}

donde clase es una clase de documento válida para LaTeX.  *Note Clases
de Documento::, para detalles de varias clases de documento disponibles
localmente.

   Usted puede incluir otras instrucciones LaTeX entre las instrucciones
`\documentclass' y `\begin{document}' (esta área se llama el
"preámbulo").

3 Clases de Documento
*********************

La clase de un determinado documento se define con la instrucción:

     \documentclass[opciones]{clase}

La instrucción `\documentclass' debe ser la primer instrucción en un
archivo fuente LaTeX.

   Los nombres integrados de clases de documento LaTeX (muchas otras
clases de documento están disponibles como complementos; *note
Descripción::):

     article  report  book  letter  slides

   Las opciones estándar están descritas más adelante.

3.1 Opciones de Clase de Documento
==================================

Usted puede especificar las así llamadas "opciones globales" u "opciones
de clase" en la instrucción `\documentclass' encerrándolas entre
corchetes de la manera usual.  Para especificar más de una opción,
deberá separarlas con una coma:

     \documentclass[opción1,opción2,...]{clase}

   Esta es la lista de las opciones de clase estándar.

   Todas las clases estándar salvo `slides' aceptan las siguientes
opciones para seleccionar el tamaño del tipo de letra (el predeterminado
es `10pt'):

     10pt  11pt  12pt

   Todas las clases estándar aceptan estas opciones para seleccionar el
tamaño del papel (el predeterminado es `letterpaper'):

     a4paper a5paper b5paper executivepaper legalpaper letterpaper

   Otras opciones diversas:

`draft, final'
     marca/no marca el desbordamiento de cajas con una gran caja negra;
     el predeterminado es `final'.

`fleqn'
     Coloca las fórmulas mostradas alineadas a la izquierda; el
     predeterminado es centrado.

`landscape'
     Selecciona el formato apaisado; el predeterminado es vertical.

`leqno'
     Coloca los números de ecuación en el lado izquierdo de las
     ecuaciones; el predeterminado es el lado derecho.

`openbib'
     Usa el formato de bibliografía “abierto”.

`titlepage, notitlepage'
     Especifica si la página de título es independiente; de manera
     predeterminada depende de la clase.

   Estas opciones no están disponibles con la clase slides:

`onecolumn'
`twocolumn'
     Composición tipográfica en una o dos columnas; el predeterminado es
     `onecolumn'.

`oneside'
`twoside'
     Selecciona el diseño de una o dos caras; el predeterminado es
     `oneside', excepto para la clase `book'.

     El parámetro `\evensidemargin' (`\oddsidemargin' determina la
     distancia en páginas par (impar) numeradas entre el lado izquierdo
     de la página y el margen excedente del texto.  Los valores
     predeterminados varían con el tamaño del papel y si el diseño
     seleccionado es de uno o dos lados.  Para imprimir texto en un lado
     es centrado, para dos lados, `\oddsidemargin' es 40% de la
     diferencia entre `\paperwidth' y `\textwidth' con el resto de
     `\evensidemargin'.

`openright'
`openany'
     Determina si un capítulo debe iniciar en una página del lado
     derecho; para book, el predeterminado es `openright'.

   La clase `slides' ofrece la opción `clock' para imprimir la hora en
la parte inferior de cada nota.

   Los paquetes adicionales se cargan de la siguiente manera:

     \usepackage[opciones]{paquete}

   Para especificar más de un paquete, usted puede separarlos con una
coma, o utilizar múltiples instrucciones`\usepackage'.

   Cualquiera de las opciones que figuran en la instrucción
`\documentclass' que no son conocidas por la clase de documento
seleccionada son transmitidas a los paquetes cargados con `\usepackage'.

4 Tipos de Letra
****************

Dos aspectos importantes de la selección de un "tipo de letra" son la
especificación del tamaño y el estilo.  Las instrucciones LaTeX para
hacer esto se describen a continuación.

4.1 Estilos del Tipo de Letra
=============================

Las siguientes instrucciones para el estilo del tipo de letra son
compatibles con LaTeX.

   Estas instrucciones se utilizan como  `\textit{texto en cursiva}'.
Las instrucciones correspondientes entre paréntesis son la “forma
declarativa”, la cual no toma argumentos. El ámbito de aplicación de la
forma de declaración dura hasta la instrucción “end” del estilo del tipo
de letra o hasta el final del grupo actual.

   Las formas declarativas son acumulativas; es decir, usted puede decir
ya sea `\sffamily\bfseries' o `\bfseries\sffamily' para obtener sans
serif en negrita.

   También puede utilizar la forma de entorno de las formas
declarativas; por ejemplo, `\begin{ttfamily}...\end{ttfamily}'.

`\textrm (\rmfamily)'
     Romana.

`\textit (\itshape)'
     cursivas.

`\emph'
     Énfasis (cambia entre `\textit' y `\textrm').

`\textmd (\mdseries)'
     Peso medio (predeterminado).

`\textbf (\bfseries)'
     Negrita.

`\textup (\upshape)'
     Vertical (predeterminado). Lo opuesto a inclinada.

`\textsl (\slshape)'
     Oblicua.

`\textsf (\sffamily)'
     Sans serif.

`\textsc (\scshape)'
     Versales.

`\texttt (\ttfamily)'
     Máquina de escribir.

`\textnormal (\normalfont)'
     Tipo de letra principal del documento.

`\mathrm'
     Romana, para usar en modo math.

`\mathbf'
     Negrita, para usarse en modo math.

`\mathsf'
     Sans serif, para usarse en modo math.

`\mathtt'
     Máquina de escribir, para usarse en modo math.

`\mathit'
`(\mit)'
     cursivas, para utilizarse en modo math.

`\mathnormal'
     Para usarse en modo math, por ejemplo dentro de otra declaración de
     estilo de letra.

`\mathcal'
     Letras `caligráficas', para usarse en modo math.

   Además, la instrucción `\mathversion{bold}' se pude utilizar para
cambiar a letras y símbolos en negrita dentro de fórmulas.
`\mathversion{normal}' restablece el valor predeterminado.

   LaTeX también proporciona estas instrucciones, que incondicionalmente
cambian a determinado estilo, es decir, _no_ son acumulativas.  Estas se
utilizan de forma diferente que las instrucciones anteriores, también:
`{\instrucción ...}' en lugar de `\instrucción{...}'.  Son dos cosas muy
distintas.

`\bf'
     Cambia a tipo de letra negrita.

`\cal'
     Cambia a letras caligráficas para math.

`\em'
     Énfasis (cursivas con romana, romana con cursivas).

`\it'
     cursivas.

`\rm'
     Romana.

`\sc'
     Versales.

`\sf'
     Sans serif.

`\sl'
     Oblicua (oblicua).

`\tt'
     Máquina de escribir (monoespacio, de ancho fijo).

4.2 Tamaños del Tipo de Letra
=============================

Las siguientes instrucciones para el tamaño del tipo de letra estándar
son compatibles con LaTeX.  La tabla muestra el nombre de la instrucción
y el tamaño real (en puntos) del tipo de letra correspondiente utilizado
con las opciones de tamaño del documento `10pt', `11pt' y `12pt',
respectivamente (*note Opciones de Clase de Documento:: ).

Instrucción                      `10pt'  `11pt'  `12pt'
---------------------------------------------------------
`\tiny'                          5       6       6
`\scriptsize'                    7       8       8
`\footnotesize'                  8       9       10
`\small'                         9       10      10.95
`\normalsize' (predeterminado)   10      10.95   12
`\large'                         12      12      14.4
`\Large'                         14.4    14.4    17.28
`\LARGE'                         14.4    14.4    17.28
`\huge'                          20.74   20.74   24.88
`\Huge'                          24.88   24.88   24.88

   Las instrucciones tal como están listadas aquí son “formas
declarativas”. El ámbito de aplicación de la forma declarativa dura
hasta la instrucción “end” del estilo del tipo de letra o hasta el final
del grupo actual.  También puede utilizar la forma de entorno en estas
instrucciones; por ejemplo, `\begin{tiny}...\end{tiny}'.

4.3 Instrucciones de Bajo Nivel para el Tipo de Letra
=====================================================

Estas instrucciones están destinadas principalmente para los escritores
de macros y paquetes.  Las instrucciones listadas anteriormente son sólo
un subconjunto de las disponibles.

`\fontencoding{codificación}'
     Selecciona la codificación del tipo de letra. Las codificaciones
     válidas incluyen a `OT1' y `T1'.

`\fontfamily{familia}'
     Selecciona la familia del tipo de letra. Las familias válidas
     incluyen:

        • `cmr'  para Romana de Computadora Moderna

        • `cmss' para Sans Serif de Computadora Moderna

        • `cmtt' para Máquina  de Escribir de Computadora Moderna

     y muchas otras.

`\fontseries{series}'
     Selecciona las series del tipo de letra. Las series válidas
     incluyen:

        • `m'  Mediana (normal)

        • `b'  Negrita

        • `c'  Condensada

        • `bc' Negrita condensada

        • `bx' Negrita extendida

     y otras combinaciones diferentes.

`\fontshape{forma}'
     Selecciona la forma del tipo de letra. Las formas válidas son:

        • `n'  Vertical (normal)

        • `it' Cursiva

        • `sl' Oblicua (oblicua)

        • `sc' Versales

        • `ui' Cursiva vertical

        • `ol' Esquema

     Las dos últimas formas no están disponibles para la mayoría de las
     familias de tipos de letra.

`\fontsize{tamaño}{espaciado}'
     Establece el tamaño de letra. El primer parámetro es el tamaño a
     cambiar el tipo de letra y el segundo es el espaciado de línea a
     usar; este se almacena en un parámetro denominado `\baselineskip'.
     La unidad de ambos parámetros de manera predeterminada es pt.  El
     valor predeterminado de `\baselineskip' para el tipo de letra
     Computadora Moderna es 1.2 veces `\fontsize'.

     El interlineado de espacio doble también es multiplicado por el
     valor del parámetro `\baselinestretch' cuando cambia el tamaño del
     tipo de letra; el predeterminado es 1.  Sin embargo, la mejor
     manera de hacer un documento con “doble espacio”, si tiene la
     suficiente mala suerte de tener que producirlo, es usar el paquete
     `setspace'; vea
     `http://www.tex.ac.uk/cgi-bin/texfaq2html?label=linespace'.

`\linespread{factor}'
     Equivalente a `\renewcommand{\baselinestretch}{factor}', y por lo
     tanto debe estar seguido por `\selectfont' para que tenga algún
     efecto.  Es mejor especificarlo en el preámbulo, o utilizar el
     paquete `setspace', justo como se acaba de describir anteriormente.

     Las modificaciones introducidas por llamar a la fuente de las
     instrucciones descritas anteriormente no entrará en vigor sino
     hasta que se invoque a `\selectfont'.

`\usefont{codificación}{familia}{series}{forma}'
     Lo mismo que invocar a `\fontencoding', `\fontfamily',
     `\fontseries' y `\fontshape' con los parámetros dados, seguida por
     `\selectfont'.

5 Diseño
********

Varias instrucciones para controlar el diseño general de la página.

5.1 `\onecolumn'
================

La declaración `\onecolumn' comienza una nueva página y la produce con
una sola columna.  Este es el valor predeterminado.

5.2 `\twocolumn'
================

Sinopsis:

     \twocolumn[textocolumna1]

   La declaración `\twocolumn' comienza una nueva página y la produce
con dos columnas. Si el argumento opcional textocolumna1 está presente,
esta es compuesta en modo de una columna antes de comenzar la
composición de las dos columnas.

   Estos parámetros controlan la tipografía en la producción de dos
columnas:

`\columnsep'
     La distancia entre las columnas (de manera predeterminada a 35pt).

`\columnseprule'
     El ancho de la regla entre columnas; el predeterminado es 0pt, por
     lo tanto no hay regla.

`\columnwidth'
     El ancho de la columna actual; este es igual a `\textwidth' en
     texto de una sola columna.

   Estos parámetros controlan el comportamiento de la flotación de las
dos columnas producidas:

`\dbltopfraction'
     Máxima fracción en la parte superior de una página de dos columna
     que pueden ocupar los flotantes.  El predeterminado es `.7', puede
     ser útil redefinirlo a (digamos) `.9' para evitar llegar tan pronto
     a páginas flotantes.

`\dblfloatpagefraction'
     La mínima fracción de una página con flotantes que deben ocupar los
     flotantes, para una página de dos columnas con flotantes.  El
     predeterminado es `.5'.

`\dblfloatsep'
     Distancia entre flotantes en la parte superior o inferior de una
     página de dos columnas con flotantes.  Predeterminado a `12pt
     plus2pt minus2pt' para `10pt' y `11pt' para documentos, `14pt
     plus2pt minus4pt' para `12pt'.

`\dbltextfloatsep'
     Distancia entre un flotante multicolumna en la parte superior o
     inferior de una página y el texto principal.  De manera
     predeterminada es `20pt plus2pt minus4pt'.

5.3 `\flushbottom'
==================

La declaración `\flushbottom' hace que todas las páginas tengan la misma
altura, añadiendo espacio vertical extra donde sea necesario para llenar
la página.

   Este es el predeterminado si se selecciona el modo `twocolumn' (*note
Opciones de Clase de Documento::).

5.4 `\raggedbottom'
===================

La declaración `\raggedbottom' hace que todas las páginas tengan la
altura natural del material en esa página.  Sin longitudes flexibles que
se deban ajustar.

5.5 Parámetros para el Diseño de Página
=======================================

`\headheight'
     Altura de la caja que contiene el encabezado.  El predeterminado es
     `30pt', salvo en la clase `book', donde este varía con el tamaño de
     letra.

`\headsep'
     Distancia vertical entre la línea inferior de la cabecera y la
     parte superior del texto principal.  El predeterminado es `25pt',
     salvo en la clase `book', donde este varía con el tamaño de letra.

`\footskip'
     Distancia desde la línea base de la última línea de texto a la
     línea base del pié de página.  El predeterminado es `30pt', salvo
     en la clase `book', donde este varía con el tamaño de letra.

`\linewidth'
     Ancho de la línea actual; el predeterminado varía con el tamaño de
     fuente, el ancho del papel, el modo two-column, etc.  Para un
     documento `article' en `10pt', este se establece a `345pt'; en modo
     two-column, este cambia a `229.5pt'.

`\textheight'
     La altura vertical normal del cuerpo de la página; el
     predeterminado varía con el tamaño de letra, clase de documento,
     etc.  Para un documento `article' o `report' en `10pt', este se
     fija a `43\baselineskip'; para `book', es `41\baselineskip'.  Para
     `11pt', es `38\baselineskip' y para `12pt', `36\baselineskip'.

`\textwidth'
     El ancho horizontal normal del cuerpo de la página; el
     predeterminado varía de la manera usual.  Para un documento
     `article' o `report', es `345pt' en `10pt', `360pt' en `11pt' y
     `390pt' en `12pt'.  Para un documento `book', es `4.5in' en `10pt'
     y `5in' en `11pt' o `12pt'.

`\topmargin'
     Espacio entre la parte superior de la página TeX (de manera
     predeterminada, una pulgada en la parte superior del papel) y en la
     parte superior del encabezado.  El predeterminado se calcula
     basándose en muchos otros parámetros: `\paperheight − 2in −
     \headheight − \headsep − \textheight − \footskip', y luego se
     divide entre dos.

`\topskip'
     La distancia mínima entre la parte superior del cuerpo de la página
     y la línea base de la primer línea de texto.  Para clases estándar,
     el predeterminado es el mismo que el tamaño de letra, por ejemplo,
     `10pt' en `10pt'.

6 Seccionado
************

Las instrucciones de seccionado proporcionan los medios para estructurar
su texto en unidades:

`\part'

`\chapter'
     (únicamente las clases report y book)

`\section'

`\subsection'

`\subsubsection'

`\paragraph'

`\subparagraph'

   Todas las instrucciones de seccionado tienen la misma forma general,
por ejemplo,

     \chapter[títulobreve]{título}

   Además de proporcionar el encabezado título en el texto principal, el
título de la sección puede aparecer en otros dos lugares:

  1. La tabla de contenido.

  2. El título breve en la parte superior de la página.

   Tal vez no quiera el mismo texto en estos lugares como en el texto
principal.  Para controlar esto, las instrucciones de seccionado tienen
un argumento opcional, toctitle que, cuando se proporciona, especifica
el texto de esos otros lugares.

   Además, todas las instrucciones de seccionado tienen formas con `*'
que imprimen el título de la manera usual, pero no incluyen un número y
no producen una entrada en la tabla de contenido.  Por ejemplo:

     \section*{Preámbulo}

   La instrucción `\appendix' cambia la manera en que se numeran las
siguientes unidades de sección.  La instrucción `\appendix' en sí misma
no genera texto y no afecta la númeración de las partes.  El uso normal
de esta instrucción es algo así como:

     \chapter{Un Capítulo}
     …
     \appendix
     \chapter{El Primer Apéndice}

   El contador `secnumdepth' controla la impresión de los números de
sección.  La configuración

     \setcounter{secnumdepth}{nivel}

suprime los números en encabezados y cualquier profundidad > nivel,
donde `chapter' es el nivel cero.  (*Note \setcounter::.)

7 Referencias Cruzadas
**********************

Una razón para numerar cosas como figuras y ecuaciones es para referir
al lector a ellas, como en “Vea la Figura 3 para más detalles”.

7.1 `\label'
============

Sinopsis:

     \label{clave}

   Una instrucción `\label' que aparece en un texto normal asigna a
clave el número de la unidad de sección actual; que aparece dentro de un
entorno numerado asignando ese número a clave.

   Un nombre de clave puede consistir de cualquier secuencia de letras,
dígitos, o caracteres de puntuación.  Distingue entre letras mayúsculas
y minúsculas.

   Para evitar la creación accidental de dos etiquetas con el mismo
nombre, es común el uso de etiquetas que consisten de un prefijo y un
sufijo, separados por una coma o un punto. Algunos prefijos utilizados
convencionalmente:

`ch'
     para capítulos

`sec'
     para instrucciones de seccionado de bajo nivel

`fig'
     para figuras

`tab'
     para tablas

`eq'
     para ecuaciones

   Por lo tanto, una etiqueta para una figura parecería como `fig:snark'
o `fig.snark'.

7.2 `\pageref{clave}'
=====================

Sinopsis:

     \pageref{clave}

   La instrucción `\pageref'{clave} produce el número de página del
lugar en el texto en donde aparece la instrucción `\label'{clave}.

7.3 `\ref{clave}'
=================

Sinopsis:

     \ref{clave}

   La instrucción `\ref' produce el número de la unidad de sección de la
ecuación, pie de página, figura, …, de la instrucción `\label'
correspondiente (*note \label::).  Esta no produce ningún texto, como
por ejemplo la palabra `Sección' o `figura', únicamente el número.

8 Entornos
**********

LaTeX proporciona muchos entornos para marcar cierto texto.  Cada
entorno comienza y termina de la misma manera:

     \begin{nombreentorno}
     ...
     \end{nombreentorno}

8.1 `abstract'
==============

Sinopsis:
     \begin{abstract}
     ...
     \end{abstract}

   Entorno para producir un resumen, posiblemente de varios párrafos.

8.2 `array'
===========

Sinopsis:

     \begin{array}{plantilla}
     texto col1&texto col1&coln}\\
     ...
     \end{array}

   Las matrices matemáticas se producen con el entorno `array',
normalmente dentro de un entorno `equation' (*note equation::).  Tiene
un único argumento plantilla obligatorio que describe el número de
columnas y la alineación dentro de ellas.  Cada columna col se
especifica por una sola letra que indica el número de elementos y deben
tener el formato de la siguiente manera:

`c'
     centrada

`l'
     alineada a la izquierda

`r'
     alineada a la derecha

   La entradas de columna son separadas con `&'.  Las entradas de
columna pueden incluir otras instrucciones LaTeX.  Cada fila de la
matriz se termina con `\\'.

   En la plantilla, la construcción `@{texto}' coloca texto entre
columnas en cada fila.

   He aquí un ejemplo:

     \begin{equation}
       \begin{array}{lrc}
       izquierda1 & derecha1 & centrado1 \\
       izquierda2 & derecha2 & centrado2 \\
       \end{array}
     \end{equation}

   El parámetro `\arraycolsep' define la mitad del ancho del espacio de
separación entre columnas; el predeterminado es `5pt'.  *Note tabular::,
para otros parámetros que afectan el formato en entornos `array', a
saber `\arrayrulewidth' y `\arraystretch'.

   El entorno `array' únicamente se puede utilizar en modo math.

8.3 `center'
============

Sinopsis:

     \begin{center}
     línea1 \\
     línea2 \\
     \end{center}

   El entorno `center' le permite crear un párrafo consistente de líneas
que están centradas respecto al margen izquierdo y derecho de la página
actual.  Cada línea es terminada con dobles barras inversas `\\'.

8.3.1 `\centering'
------------------

La declaración `\centering' corresponde al entorno `center'.  Esta
declaración se puede utilizar dentro de un entorno tal como `quote' o en
un `parbox'.  Por lo tanto, el texto de una figura o una tabla se puede
centrar en la página poniendo una instrucción `\centering' al principio
de la figura o en el entorno table.

   A diferencia del entorno `center', la instrucción `\centering' no
comienza un nuevo párrafo; esta simplemente cambia el formato que LaTeX
aplica a las unidades de párrafo.  Para afectar el formato de la unidad
de párrafo, el alcance de la declaración debe contener una línea en
blanco o la instrucción `\end' (de un entorno tal como quote), que
finaliza la unidad de párrafo.

   He aquí un ejemplo:

     \begin{quote}
     \centering
     primer línea \\
     segunda línea \\
     \end{quote}

8.4 `description'
=================

Sinopsis:

     \begin{description}
     \item [etiqueta1] elemento1
     \item [etiqueta2] elemento2
     ...
     \end{description}

   El entorno `description' se utiliza para hacer listas etiquetadas.
Cada etiqueta es compuesta tipográficamente en negrita, alineada a la
derecha.  El texto del elemento puede contener múltiples párrafos.

   Otra variación: debido a que el estilo negrita se aplica a las
etiquetas, si usted compone una etiqueta en máquina de escribir usando
`\texttt', obtendrá una máquina de escribir en negrita:
`\item[\texttt{máquina de escribir y negrita}]'.  Esta también puede
estar en negrita, entre otras cuestiones.  Para obtener sólo en máquina
de escribir, use `\tt', que restablece todas las variaciones de otros
estilos: `\item[{\tt máquina de escribir simple}]'.

   Para detalles acerca del espaciado en listas, vea *note itemize::.

8.5 `displaymath'
=================

Sinopsis:

     \begin{displaymath}
     fórmula matemática
     \end{displaymath}

o

     \[math\]

   El entorno `displaymath' (`\[...\]' es un sinónimo) de composición
tipográfica de texto math en una línea independiente, centrada de manera
predeterminada.  La opción global `fleqn' produce ecuaciones alineadas a
la izquierda; vea *note Opciones de Clase de Documento::.

   No se añade un número de ecuación al texto de `displaymath'; Para
obtener un número de ecuación, utilice el entorno `equation' (*note
equation::).

8.6 `document'
==============

El entorno `document' encierra el cuerpo de un documento.  este es
obligatorio en cada documento LaTeX.  *Note Iniciando y Finalizando::.

8.7 `enumerate'
===============

Sinopsis:

     \begin{enumerate}
     \item elemento1
     \item elemento2
     ...
     \end{enumerate}

   El entorno `enumerate' produce una lista numerada.  Las enumeraciones
se pueden anidar unas dentro de otras, hasta cuatro niveles de
profundidad.  Estas también se pueden anidar en otros entornos de
párrafo, tal como `itemize' (*note itemize::) y `description' (*note
description::).

   Cada elemento de una lista enumerada comienza con una instrucción
`\item'.  En el entorno por lo menos debe haber una instrucción `\item'.

   De manera predeterminada, la numeración de cada nivel se hace de la
siguiente manera:

  1. 1., 2., …

  2. (a), (b), …

  3. i., ii., …

  4. A., B., …

   El entorno `enumerate' usa los contadores `\enumi' hasta `\enumiv'
(*note Contadores::).  Si se proporciona el argumento opcional a
`\item', el contador no se incrementa por cada elemento.

   El entorno `enumerate' utiliza las instrucciones desde `\labelenumi'
hasta `\labelenumiv' para producir la etiqueta predeterminada.  Por lo
tanto, usted puede usar `\renewcommand' para cambiar las etiquetas
(*note \newcommand y \renewcommand::).  Por ejemplo, para hacer que el
primer nivel use letras mayúsculas:

     \renewcommand{\labelenumi}{\Alph{enumi}}

8.8 `eqnarray'
==============

     \begin{eqnarray}  (o `eqnarray*')
     fórmula1 \\
     fórmula2 \\
     ...
     \end{eqnarray}

   El entorno `eqnarray' se utiliza para mostrar una secuencia de
ecuaciones o desigualdades.  Es muy parecido a un entorno `array' de
tres columnas, con filas consecutivas separadas por `\\' y elementos
consecutivos en una fila, separados por un `&'.

   también puede utilizar `\\*' para separar ecuaciones independientes,
con su propósito normal de no permitir saltos de página en esa línea.

   Se coloca un número de ecuación en cada línea a menos que la línea
tenga una instrucción `\nonumber'.  Alternativamente, la forma del
entorno con `*' (`\begin{eqnarray*} ... \end{eqnarray*}') debe omitir
por completo la numeración de la ecuación, al tiempo que el mismo
comienza con `eqnarray'.

   La instrucción `\lefteqn' se utiliza para dividir grandes fórmulas a
través de varias líneas. Su argumento de composición tipográfica en el
estilo de visualización alinea a la izquierda en una caja de ancho cero.

8.9 `equation'
==============

Sinopsis:

     \begin{equation}
     fórmula-matemática
     \end{equation}

   El entorno `equation' comienza un entorno `displaymath' (*note
displaymath::), por ejemplo, centrando en la página el texto math, y
además colocando el número de ecuación en el margen derecho.

8.10 `figure'
=============

     \begin{figure[*]}[úbicación]
     figbody
     \label{etiqueta}
     \caption[títulobreve]{texto}
     \end{figure}

   Las figuras son objetos que no forman parte del texto normal, y en su
lugar son “flotados” a un lugar conveniente, como en la parte superior
de una página.  Las figuras no se dividen entre dos páginas.

   Cuando se compone tipográficamente en columnas dobles, la forma
favorita produce un ancho completo (a través de las dos columnas).

   El argumento opcional `[ubicación]' determina donde debe tratar de
colocar LaTeX su figura.  Hay cuatro lugares donde LaTeX, posiblemente,
pueda colocar un flotante:

`t'
     (Top)—en lo alto de una página de texto.

`b'
     (Bottom)—en la parte inferior de una página de texto.  No obstante,
     `b' no se permite para flotantes de ancho completo (`figure*') en
     entornos con columnas dobles.  Para mejorar esto, utilice el
     paquete `stfloats' o `dblfloatfix', pero vea el debate de
     advertencias en el FAQ:
     `http://www.tex.ac.uk/cgi-bin/texfaq2html?label=2colfloat'.

`h'
     (Here)—aquí, en la posición donde aparece el entorno figure en el
     texto.  Sin embargo, este no está permitido por sí mismo,
     automáticamente se añade `t'.  Para forzar que una figura
     absolutamente aparezca “aquí”, utilice el paquete `float' y use la
     letra de ubicación `H'.  (Este paquete también ofrece otras
     opciones).

`p'
     (Página de flotantes)—en una página de flotantes separada, misma
     que es una página que no contiene texto, únicamente flotantes.

   Las clases estándar report y article utilizan la ubicación
predeterminada `tbp'.

   El cuerpo de la figura se compone de cualquier texto, instrucciones
LaTeX, etc., que desee.

   La instrucción `\caption' especifica el texto del título de la
figura.  El título de manera predeterminada lleva el número.  Si
loftitle está presente, esta se utiliza en la lista de figuras en lugar
del texto (*note Tablas de Contenido::).

     La fracción máxima de la página que se permite sea ocupada por
     flotantes en la parte inferior; el predeterminado es `.3'.

`\floatpagefraction'
     La fracción mínima de una página flotante que deben ocupar los
     flotantes; predeterminado a `.5'.

`\floatsep'
     Espacio entre flotantes en la parte superior o inferior de una
     página; predeterminado a `12pt plus2pt minus2pt'.

`\intextsep'
     Espacio por encima y por debajo de un flotante en medio del texto
     principal; predeterminado a `12pt plus2pt minus2pt' para estilos de
     `10pt' y `11pt', `14pt plus4pt minus4pt' para `12pt'.

`\textfloatsep'
     Espacio entre el último/primero flotante en la parte
     superior/inferior de una página; de manera predeterminada a `20pt
     plus2pt minus4pt'.

`\textfraction'
     Mínima fracción de una página que debe ser texto; si los flotantes
     ocupan mucho espacio preserva tanto texto como sea posible, para
     que los flotantes sean trasladados a una página diferente.  El
     predeterminado es `.2'.

`\topfraction'
     Máxima fracción en la parte superior de una página que se puede
     ocupar antes de los flotantes; el predeterminado es `.7'.

8.11 `flushleft'
================

     \begin{flushleft}
     línea1 \\
     línea2 \\
     ...
     \end{flushleft}

   El entorno `flushleft' le permite crear un párrafo consistente de
líneas que están alineadas en el margen de la mano izquierda y no están
justificadas a la derecha. Cada línea se debe terminar con `\\'.

8.11.1 `\raggedright'
---------------------

La declaración `\raggedright' corresponde al entorno `flushleft'.  Esta
declaración se puede utilizar dentro de un entorno tal como `quote' o en
un `parbox'.

   A diferencia del entorno `flushleft', la instrucción `\raggedright'
no comienza un nuevo párrafo; esta únicamente cambia como aplica LaTeX
el formato a las unidades de párrafo.  Para afectar el formato de la
unidad párrafo, el alcance de la declaración debe contener una línea en
blanco o la instrucción `\end' que termina la unidad de párrafo.

8.12 `flushright'
=================

     \begin{flushright}
     línea1 \\
     línea2 \\
     ...
     \end{flushright}

   El entorno `flushright' le permite crear un párrafo consistente de
líneas que están alineadas en el margen a mano derecha e irregulares a
la izquierda.  Cada línea se debe terminar con `\\'.

8.12.1 `\raggedleft'
--------------------

La declaración `\raggedleft' corresponde al entorno `flushright'.  Esta
declaración se puede utilizar dentro de un entorno tal como `quote' o en
un `parbox'.

   A diferencia del entorno `flushright', la instrucción `\raggedleft'
no comienza un nuevo párrafo; esta únicamente cambia como aplica LaTeX
el formato a las unidades de párrafo.  Para afectar el formato de la
unidad párrafo, el alcance de la declaración debe contener una línea en
blanco o la instrucción `\end' que termina la unidad de párrafo.

8.13 `itemize'
==============

Sinopsis:

     \begin{itemize}
     \item elemento1
     \item elemento2
     ...
     \end{itemize}

   El entorno `itemize' produce una lista “no ordenada”, “con viñetas”.
Se pueden anidar entorno itemize dentro de otros, hasta cuatro niveles
de profundidad.  También se pueden anidar en otros entornos que marcan
párrafos, tal como `enumerate' (*note enumerate::).

   Cada elemento de una lista `itemize' comienza con una instrucción
`\item'.  En el entorno por lo menos debe haber una instrucción `\item'.

   De forma predeterminada, las marcas en cada nivel tienen esta
apariencia:

  1. • (bala)

  2. -- (guión en negrita)

  3. * (asterisco)

  4. . (punto centrado, aquí representado como un punto)

   El entorno `itemize' utiliza las instrucciones desde `\labelitemi'
hasta `\labelitemiv' para producir la etiqueta predeterminada.  De modo
que, usted puede usar `\renewcommand' para cambiar las etiquetas.  Por
ejemplo, para que en primer nivel utilice diamantes:

     \renewcommand{\labelitemi}{$\diamond$}

   Los parámetros desde `\leftmargini' hasta `\leftmarginvi' definen la
distancia entre el margen izquierdo del entorno envolvente y el margen
izquierdo de la lista.  Por convención, `\leftmargin' se fija al
`\leftmarginN' adecuado cuando ingresa a un nuevo nivel de anidamiento.

   El predeterminado varía desde `.5em' (el nivel de anidamiento
superior) a `2.5em' (el primer nivel), y se reduce un poco en modo
two-column.  En este ejemplo se reduce mucho el espacio del margen para
las listas anidadas:

     \setlength{\leftmargini}{1.25em} % predeterminado 2.5em

   Algunos parámetros que afectan el formato de la lista:

`\itemindent'
     Sangrado extra antes de cada elemento de una lista; predeterminado
     a cero.

`\labelsep'
     Espacio entre la etiqueta y el texto de un elemento; predeterminado
     a `.5em'.

`\labelwidth'
     Ancho de la etiqueta; predeterminado a `2em', o `1.5em' en modo
     two-column.

`\listparindent'
     Sangría extra añadida al segundo y subsecuentes párrafos, dentro de
     un elemento de la lista; predeterminado a `0pt'.

`\rightmargin'
     Distancia horizontal entre el margen derecho de la lista y el
     entorno envolvente; de manera predeterminada `0pt', salbo en los
     entornos `quote', `quotation' y `verse', donde se hace igual a
     `\leftmargin'.

   Parámetros que afectan el espaciamiento vertical entre elementos de
la lista (más bien libre, de manera predeterminada).

`\itemsep'
     Espacio vertical entre elementos.  El predeterminado es `2pt
     plus1pt minus1pt' para `10pt' documentos, `3pt plus2pt minus1pt'
     para `11pt' y `4.5pt plus2pt minus1pt' para `12pt'.

`\parsep'
     Espacio vertical extra entre párrafos dentro de un elemento de la
     lista.  Los predeterminados son los mismos que para `\itemsep'.

`\topsep'
     Espacio vertical entre el primer elemento y el párrafo anterior.

     Para listas de nivel superior, el predeterminado es `8pt plus2pt
     minus4pt' para `10pt' documentos, `9pt plus3pt minus5pt' para
     `11pt' y `10pt plus4pt minus6pt' para `12pt'.  Estos se reducen en
     listas anidadas.

`\partopsep'
     Espacio extra añadido a `\topsep' cuando el entorno lista comienza
     un párrafo.  El valor predeterminado es `2pt plus1pt minus1pt' para
     `10pt' documentos, `3pt plus1pt minus1pt' para `11pt' y `3pt
     plus2pt minus2pt' para `12pt'.

   Sobre todo para listas con elementos cortos, puede ser conveniente
eludir los espacios entre ellos.  He aquí un ejemplo de una definición
del entorno `itemize*' sin espacio extra entre elementos o entre
párrafos dentro de un solo elemento (`\parskip' no es específico de la
lista, *note \parskip::):

     \newenvironment{itemize*}%
       {\begin{itemize}%
         \setlength{\itemsep}{0pt}%
         \setlength{\parsep}{0pt}}%
         \setlength{\parskip}{0pt}}%
       {\end{itemize}}

8.14 Entorno `letter': Escribiendo Cartas
=========================================

Este entorno se utiliza para crear cartas.  *Note Cartas::.

8.15 `list'
===========

El entorno `list' es un entorno genérico que se utiliza para definir
mucho de los entornos más específicos. Este rara vez se utiliza en
documentos, pero a muy menudo en las macros.

     \begin{list}{etiquetado}{espaciado}
     \item elemento1
     \item elemento2
     ...
     \end{list}

   El argumento obligatorio etiquetado especifica como se deben
etiquetar los elementos (a menos que se especifique el argumento
opcional `\item').  Este argumento es una pieza de texto que se inserta
en una caja para formar la etiqueta.  Este se puede y suele contener
otras instrucciones LaTeX.

   El argumento obligatorio spacing contiene instrucciones para cambiar
los parámetros de espaciado para la lista.  Este argumento por lo
regular está vacío, es decir, `{}', lo cual deja el espaciado
predeterminado.

8.16 `math'
===========

Sinopsis:

     \begin{math}
     fórmula-matemática
     \end{math}

   El entorno `math' inserta la fórmula math dada dentro del texto
actual.  `\(...\))' y `$...$' son sinónimos.  *Note Fórmulas
Matemáticas::.

8.17 `minipage'
===============

     \begin{minipage}[posición][alto][pos-interna]{ancho}
     texto 
     \end{minipage}

   El entorno `minipage' compone tipográficamente su cuerpo de texto en
un bloque que no debe abarcar varias páginas.  Este es similar a la
instrucción `\parbox' (*note \parbox::), pero a diferencia de `\parbox',
se pueden utilizar otros entornos de marcado de párrafos dentro de una
minipágina.

   Los argumentos son los mismos que para `\parbox' (*note \parbox::).

   De forma predeterminada, en el entorno `minipage' los párrafos no
tienen sangría.  Usted puede restablecer la sangría con una instrucción
tal como `\setlength{\parindent}{1pc}'.

   La notas al pie en un entorno `minipage' son manipuladas de una
manera que es especialmente útil para poner notas en figuras o tablas.
Una instrucción `\footnote' o `\footnotetext' coloca la nota al pie en
la parte inferior de la minipágina en lugar de en la parte inferior de
la página, y esta utiliza el contador `\mpfootnote' en lugar del
contador normal `footnote' (*note Contadores::).

   No obstante, no ponga una minipágina dentro de otra si usted está
usando notas al pie; estas pueden terminar mal en la parte inferior de
la minipágina.

8.18 `picture'
==============

     \begin{picture}(ancho,alto)(desplazamiento x,desplazamiento y)
     … instrucciones de imagen …
     \end{picture}

   El entorno `picture' le permite crear casi cualquier clase de imagen
que desee que contenga su texto, lineas, flechas y círculos.  Usted le
dice a LaTeX dónde colocar las cosas en la imagen especificando sus
coordenadas.  Una coordenada es un número que puede tener un punto
decimal y un signo menos — un número como `5', `0.3' o `-3.1416'.  Una
coordenada especifica una longitud en múltiplos de la unidad de longitud
`\unitlength', por lo que si `\unitlength' se ha establecido en `1cm',
entonces la coordenada 2.54 especifica una longitud de 2.54 centímetros.
Sólo debe cambiar el valor de `\unitlength', utilizando la instrucción
`\setlength', fuera del entorno `picture'.

   Una posición es un par de coordenadas, por ejemplo, `(2.4, -5)', que
especifican el punto con coordenada x `2.4' y coordenada y `-5'.  Las
coordenadas se especifican en la forma habitual con respecto a un
origen, que normalmente está en la esquina inferior izquierda de la
imagen.  Tenga en cuenta que cuando una posición se presenta como un
argumento, no se encierra entre llaves; los paréntesis sirven para
delimitar el argumento.

   El entorno `picture' tiene un argumento obligatorio, el cual es una
`posición'.  este especifica el tamaño de la imagen.  El entorno produce
una caja rectangular con la anchura y altura determinada por los
argumentos de las coordenadas x e y.

   El entorno `picture' también tiene un argumento opcional `posición',
seguido del argumento `tamaño', que puede cambiar el origen.  (A
diferencia de los argumentos opcionales, este argumento no está
contenido entre corchetes). El argumento opcional proporciona las
coordenadas del punto en la esquina inferior izquierda de la imagen (con
el cual se determina el origen).  Por ejemplo, si `\unitlength' se ha
fijado a `1mm', la instrucción

     \begin{picture}(100,200)(10,20)

produce una imagen de 100 milímetros de ancho y 200 milímetros de
altura, cuya esquina inferior izquierda está en el punto (10,20) y cuya
esquina superior derecha está en el punto (110,220).  La primera vez que
haga un dibujo, normalmente se omite el argumento opcional, dejando el
origen en el ángulo inferior izquierdo.  Si a continuación desea
modificar su imagen, trasladando todo, basta con añadir el argumento
opcional apropiado.

   El argumento obligatorio del entorno determina el tamaño nominal de
la imagen.  Esta no necesita tener ninguna relación con el tamaño de la
imagen real; Felizmente LaTeX le permitirá poner cosas fuera de la
imagen, o incluso fuera de la página.  El tamaño nominal de la imagen lo
utiliza LaTeX para determinar cuánto espacio dejar para ello.

   Todo lo que aparece en una imagen es dibujado por la instrucción
`\put'. La instrucción

     \put (11.3,-.3){...}

coloca el objeto especificado por `...' en la imagen, con su punto de
referencia en las coordenadas (11.3, -.3).  Los puntos de referencia
para distintos objetos se describen a continuación.

   La instrucción `\put' crea una "caja LR".  Puede poner cualquier cosa
que vaya en una `\mbox' (*note \mbox::) en el argumento texto de la
instrucción `\put'.  Al hacer esto, el punto de referencia será la
esquina inferior izquierda de la caja.

   Las instrucciones para `picture' están descritas en las siguientes
secciones.

8.18.1 `\circle'
----------------

     \circle[*]{diámetro}

   La instrucción `\circle' produce un círculo con un diámetro lo más
cercano posible al especificado.  La forma con `*' de la instrucción
dibuja un círculo sólido.

   Se pueden dibujar círculos de hasta 40 pt.

8.18.2 `\makebox'
-----------------

`\makebox(ancho,alto)[posición]{...}'

   La instrucción `\makebox' para el entorno picture es similar a la
instrucción normal `\makebox' excepto que usted debe especificar el
`ancho' y `alto' en múltiplos de `\unitlength'.

   El argumento opcional, `[posición]', especifica el cuadrante en el
que debe aparecer el texto.  Usted puede seleccionar hasta dos de los
siguientes:

`t'
     Mueve el elemento a la parte superior del rectángulo.

`b'
     Mueve el elemento a la parte inferior.

`l'
     Mueve el elemento a la izquierda.

`r'
     Mueve el elemento hacia la derecha.

   *Note \makebox::.

8.18.3 `\framebox'
------------------

Sinopsis:

     \framebox(ancho,alto)[posición]{...}

   La instrucción `\framebox' es como `\makebox' (vea la sección
anterior), excepto que esta coloca un marco en el exterior alrededor de
la caja que crea.

   La instrucción `\framebox' produce una regla de espesor `\fboxrule',
y deja un espacio `\fboxsep' entre la regla y el contenido de la caja.

8.18.4 `\dashbox'
-----------------

Dibuja un cuadro con una línea discontinua.  Sinopsis:

     \dashbox{dlargo}(rancho,ralto)[posición]{texto}

   `\dashbox' crea un rectángulo discontinuo alrededor del texto en un
entorno `picture'.  Los guiones son de dlargo unidades de largo, y el
rectángulo tiene una anchura total de rancho y una altura de ralto.  El
texto es posicionado en la posición opcional.

   Un cuadro de líneas discontinuas se ve mejor cuando `rancho' y
`ralto' son múltiplos de `dlargo'.

8.18.5 `\frame'
---------------

Sinopsis:

     \frame{texto}

   La instrucción `\frame' coloca un marco rectangular alrededor de
texto.  El punto de referencia es la esquina inferior izquierda del
marco.  No añade espacio extra entre el marco y el objeto.

8.18.6 `\line'
--------------

Sinopsis:

     \line(declivex,declivey){longitud}

   La instrucción `\line' dibuja una línea con la longitud dada y
declive declivex/declivey.

   LaTeX estándar únicamente puede dibujar líneas con declive = x/y,
donde x y y tienen valores enteros desde −6 hasta 6.  Para líneas de
cualquier declive, por no hablar de otras formas, vea el paquete
`curve2e' y muchos, muchos otros paquetes en CTAN.

8.18.7 `\linethickness'
-----------------------

La instrucción `\linethickness{espesor}' declara el grosor de las líneas
horizontales y verticales en un entorno picture para que sean de
espesor, el cual debe ser una longitud positiva.

   `\linethickness' no afecta el espesor de las líneas inclinadas,
círculos o los cuartos de círculo dibujados por `\oval'.

8.18.8 `\thicklines'
--------------------

La instrucción `\thicklines' es un espesor de línea alternativo para
líneas horizontales y verticales en un entorno picture; compárese *note
\linethickness:: y *note \thinlines::.

8.18.9 `\thinlines'
-------------------

La instrucción `\thinlines' es el espesor de línea predeterminado para
líneas horizontales y verticales en un entorno picture; compárese *note
\linethickness:: y *note \thicklines::.

8.18.10 `\multiput'
-------------------

Sinopsis:
     \multiput(x,y)(delta_x,delta_y){n}{obj}

   La instrucción `\multiput' copia el objeto obj en un patrón regular
entre imágenes.  primero se coloca obj en la posición (x,y), luego en la
posición (x+\delta x,y+\delta y) y así sucesivamente, n veces.

8.18.11 `\oval'
---------------

Sinopsis:

     \oval(ancho,alto)[porción]

   La instrucción `\oval' produce un rectángulo con esquinas
redondeadas.  El argumento opcional porción le permite seleccionar la
parte del óvalo vía las siguientes letras:

`t'
     selecciona la parte superior;

`b'
     selecciona la parte inferior;

`r'
     selecciona la parte derecha;

`l'
     selecciona la parte izquierda.

   Las “esquinas” del óvalo se hacen con cuartos de círculo con un radio
máximo de 20pt, por lo tanto los “óvalos” grandes se parecen más a cajas
con esquinas redondeadas.

8.18.12 `\put'
--------------

`\put(x coord,y coord){ ...  }'

   La instrucción `\put' coloca el elemento especificado por el
argumento obligatorio en las coordenadas proporcionadas.

8.18.13 `\shortstack'
---------------------

Sinopsis:

     \shortstack[posición]{...\\...\\...}

   La instrucción `\shortstack' produce un montón de objetos.  Las
posiciones válidas son:

`r'
     Mueve los objetos a la derecha de la pila.

`l'
     Mueve los objetos a la izquierda de la pila

`c'
     Mueve los objetos hacia el centro de la pila (predeterminado)

   Los objetos son separados con `\\'.

8.18.14 `\vector'
-----------------

Sinopsis:

     \vector(declive-x,declive-y){longitud}

   La instrucción `\vector' dibuja una línea con una flecha de la
longitud y declive especificados.  Los valores x e y deben estar entre
−4 y +4 incluido.

8.19 `quotation'
================

Sinopsis:

     \begin{quotation}
     texto
     \end{quotation}

   A los márgenes del entorno `quotation' se les aplica una sangría en
ambos lados izquierdo y derecho.  El texto está justificado en ambos
márgenes.  Dejar una línea en blanco entre el texto produce un nuevo
párrafo.

   A diferencia del entorno `quote', cada párrafo normalmente tiene
sangría.

8.20 `quote'
============

Sinopsis:

     \begin{quote}
     texto
     \end{quote}

   A los márgenes del entorno `quote' se les aplica una sangría en ambos
lados izquierdo y derecho.  El texto está justificado en ambos márgenes.
Dejar una línea en blanco entre el texto produce un nuevo párrafo.

   A diferencia del entorno `quotation', a los párrafos no se les aplica
una sangría.

8.21 `tabbing'
==============

Sinopsis:

     \begin{tabbing}
     fila1col1 \= fila1col2 \= fila1col3 \= fila1col4 \\
     fila2col1 \>                \> fila2col3 \\
     ...
     \end{tabbing}

   El entorno `tabbing' proporciona una manera de alinear el texto en
columnas.  Funciona mediante el establecimiento de tabuladores y
tabulación tanto como si se hubiera hecho en una máquina de escribir
común.  Es el más adecuado para los casos en que el ancho de cada
columna es constante y conocido de antemano.

   Este entorno se puede dividir en varias páginas, a diferencia del
entorno `tabular'.

   Las siguientes instrucciones se pueden utilizar dentro de un entorno
`tabbing':

`\\ tabbing'
     Final de línea.

`\= (tabbing)'
     Establece una tabulación en la posición actual.

`\> (tabbing)'
     Avanza a la siguiente tabulación.

`\<'
     Coloca el siguiente texto a la izquierda del margen local (sin
     necesidad de cambiar el margen).  Sólo se puede usar al comienzo de
     la línea.

`\+'
     Mueve hacia la derecha el margen izquierdo del siguiente y todas
     las subsecuentes instrucciones de tabulación, empezando la línea de
     tabulación, de ser necesario.

`\-'
     Mueve el margen izquierdo hacia la izquierda de la siguiente y
     todas las subsecuentes instrucciones de tabulación, comenzando con
     la línea de tabulación si es necesario.

`\' (tabbing)'
     Mueve todo lo que ha escrito hasta ahora en la columna actual, es
     decir, cualquier cosa desde la instrucción `\>', `\<', `\'', `\\' o
     `\kill' más reciente, a la derecha de la columna anterior, a ras de
     la tabulación de la columna actual.

`\` (tabbing)'
     Permite poner texto alineado a la derecha contra cualquier
     tabulación, incluyendo la tabulación 0.  Sin embargo, no puede
     mover el texto a la derecha de la última columna porque allí no hay
     tabulación.  La instrucción `\`' mueve todo el texto que le sigue,
     hasta la instrucción `\\' o `\end{tabbing}' que termina la línea,
     al margen derecho del entorno tabbing.  No debe haber instrucción
     `\>' o `\'' entre el `\`' y la instrucción que termina la línea.

`\a (tabbing)'
     En un entorno `tabbing', las instrucciones `\=', `\'' y `\`' no
     producen acentos en la manera usual (*note Acentos::).  En su
     lugar, se utilizan estas instrucciones `\a=', `\a'' y `\a`'.

`\kill'
     Fija una tabulación sin producir texto.  Trabaja igual que `\\'
     salvo que esta desecha la línea actual en lugar de producir algo
     útil.  El efecto de cualquier instrucción `\=', `\+' o `\-' en esa
     línea seguirá en vigor.

`\poptabs'
     Restaura las posiciones de tabulación salvadas por la última
     `\pushtabs'.

`\pushtabs'
     Guarda todas las posiciones de tabulación actuales. Útil para
     cambiar temporalmente las posiciones de tabulación en medio de un
     entorno `tabbing'.

`\tabbingsep'
     Distancia a la izquierda de la tabulación movida por `\''.

   En este ejemplo se compone tipográficamente una función de Pascal en
el formato tradicional:

     \begin{tabbing}
     function \= fact(n : integer) : integer;\\
              \> begin \= \+ \\
                    \> if \= n $>$ 1 then \+ \\
                             fact := n * fact(n-1) \- \\
                       else \+ \\
                             fact := 1; \-\- \\
                 end;\\
     \end{tabbing}

8.22 `table'
============

Sinopsis:

      \begin{table}[ubicación]

       cuerpo de la tabla

      \caption{título de la tabla}
      \end{table}

   Las tablas son objetos que no forman parte del texto normal, y por lo
general “flotan” a un lugar conveniente, como la parte superior de una
página.  Las tablas no se dividen en dos páginas.

   El argumento opcional `[ubicación]' determina dónde LaTeX trata de
colocar su tabla.  Hay cuatro lugares donde LaTeX, posiblemente, pueda
colocar un flotante:; estos son los mismo que los utilizados con el
entorno `figure', y se describen allí (*note figure::).

   Las clases `report' y `article' estándar utilizan la ubicación
`[tbp]' predeterminada.

   El cuerpo de la tabla se compone de cualquier texto, instrucciones
LaTeX, etc., que usted desee.  La instrucción `\caption' le permite
colocar un título a su tabla.

8.23 `tabular'
==============

Sinopsis:

     \begin{tabular}[ubicación]{columnas}
     columna 1 entrada & columna 2 entrada ... & columna n entrada n \\
     ...
     \end{tabular}

   o

     \begin{tabular*}{ancho}[posición]{columnas}
     columna 1 entrada & columna 2 entrada ... & columna n entrada n \\
     ...
     \end{tabular*}

   Estos entornos producen una caja consiste de una secuencia de filas
de elementos, alineadas verticalmente en columnas.

   Se debe utilizar `\\' para especificar el final de cada fila de la
tabla, salvo por la última, en que esta es opcional —a menos que le siga
una instrucción `\hline' (para colocar una raya bajo la tabla).

   Los argumentos obligatorios y opcionales consisten de:

`ancho'
     Especifica la anchura del entorno `tabular*'.  Este debe tener
     espacio entre las columnas que se puede estirar para llenar el
     ancho especificado.

`posición'
     Especifica la posición vertical; de manera predeterminada alinea al
     centro el entorno.

     `t'
          alineado en la fila superior

     `b'
          alineado en la fila inferior

`columnas'
     Especifica el formato de columna.  Este consiste en una secuencia
     de los siguientes especificadores, correspondientes a la secuencia
     de columnas y el material intercolumna.

     `l'
          Una columna de elementos alineados a la izquierda.

     `r'
          Una columna de elementos alineados a la derecha.

     `'
          Una columna de elementos centrados.

     `|'
          Una línea vertical que llena la altura y profundidad total del
          entorno.

     `@{texto}'
          Esta inserta texto en cada fila.  Una @-expresión suprime el
          espacio intercolumnas insertado normalmente entre columnas;
          cualquier espacio deseado entre el texto insertado y los
          elementos adyacentes se deberá incluir en texto.  Una
          instrucción `\extracolsep{ancho}' en una @-expresión provoca
          que aparezca un espacio extra de ancho `ancho' a la izquierda
          de todas las columnas subsecuentes, hasta que se anule por
          otra instrucción `\extracolsep'.  A diferencia del espacio
          intercolumna ordinario, este espacio adicional no se suprime
          por una @-expresión.  Una instrucción `\extracolsep'
          únicamente se pude utilizar en una @-expresión en el argumento
          `columnas'.

     `p{ancho}'
          Produce una columna con cada elemento compuesto
          tipográficamente en una parbox de ancho ancho, como si fuera
          el argumento de una instrucción `\parbox[t]{ancho}'.  Sin
          embargo, una `\\' en el elemento no puede, salvo en las
          siguientes situaciones:

            1. Dentro de un entorno como `minipage', `array' o
               `tabular'.

            2. Dentro de una `\parbox' explícita.

            3. En el alcance de una declaración `\centering',
               `\raggedright' o `\raggedleft'.  La última declaración
               debe aparecer dentro de llaves o un entorno cuando se
               utiliza en un elemento `p'-columna.

     `*{número}{columnas}'
          Equivalente a número de copias de columnas, donde número es un
          entero positivo y columnas es cualquier lista de
          especificadores de columna, la cual puede contener otra
          `*-expresión'.

   Parámetros que controlan el formato:

`\arrayrulewidth'
     El espesor de la línea creada por `|', `\hline' y `\vline' en los
     entornos `tabular' y `array'; el predeterminado es `.4pt'.

`\arraystretch'
     El factor para escalar el espaciado entre hileras en los entornos
     `tabular' y `array'; el predeterminado es `1', para no escalar.

`\doublerulesep'
     Distancia horizontal entre las líneas verticles producidas por `||'
     en los entornos `tabular' y `array'; el predeterminado es `2pt'.

`\tabcolsep'
     La mitad de la anchura del espacio entre las columnas; el
     predeterminado es `6pt'.

   Estas instrucciones se pueden utilizar en el interior de un entorno
`tabular':

8.23.1 `\multicolumn'
---------------------

Sinopsis:
     \multicolumn{columnas}{posición}{texto}

   La instrucción `\multicolumn' provoca que una entrada se extienda por
varias columnas.  El primer argumento obligatorio, columnas, especifica
es el número de columnas por abarcar.  El segundo argumento obligatorio,
posición, especifica el formato de la entrada; `c' para centrado, `l'
para alineado a la izquierda, `r' para alineado a la derecha.  El tercer
argumento obligatorio, texto, especifica el texto a colocar en la
entrada.

   He aquí un ejemplo que muestra dos columnas separadas por un doble
guión; `\multicolumn' se utiliza para el encabezado:

     \begin{tabular}{r@{--}l}
     \multicolumn{2}{c}{\bf Unicode}\cr
        0x80&0x7FF   \cr
       0x800&0xFFFF  \cr
     0x10000&0x1FFFF \cr
     \end{tabular}

8.23.2 `\cline'
---------------

Sinopsis:

     \cline{i-j}

   La instrucción `\cline' dibuja un línea horizontal a través de las
columnas especificadas, comenzando en la colúmna i y terminando en la
columna j, que son especificadas en el argumento obligatorio.

8.23.3 `\hline'
---------------

La instrucción `\hline' dibuja una línea horizontal del ancho del
entorno `tabular' o `array' especificado.  Se utiliza comúnmente para
para dibujar una línea en la parte superior, inferior y entre filas de
la tabla.

8.23.4 `\vline'
---------------

La instrucción `\vline' dibuja una línea vertical extendida a la altura
y profundidad total de su fila.  Una instrucción `\hfill' se puede
utilizar para mover la línea hasta el borde de la columna.  También se
puede utilizar en una @-expresión.

8.24 `thebibliography'
======================

Sinopsis:

     \begin{thebibliography}{etiqueta-más-amplia}
     \bibitem[etiqueta]{clave-de-cita}
     ...
     \end{thebibliography}

   El entorno `thebibliography' produce una bibliografía o lista de
referencia.

   En las clase `article', esta lista de referencia es etiquetada como
“Referencias”; en la clase `report', esta es etiquetada como
“Bibliografía”.  Usted puede cambiar la etiqueta (en las clases
estándar) redefiniendo la instrucción `\refname'.  Por ejemplo, la
siguiente instrucción la elimina por completo:

     \renewcommand{\refname}{}

   El argumento obligatorio etiqueta-más-amplia es texto que, al momento
de componerla tipográficamente, es tan ancho como la etiqueta producida
por la instrucción `\bibitem'.  Se suele dar como `9' para bibliografías
de menos de 10 referencias, `99' para las que tienen menos de 100, etc.

8.24.1 `\bibitem'
-----------------

Sinopsis:
     \bibitem[etiqueta]{clave-de-cita}

   La instrucción `\bibitem' genera una entrada etiquetada por etiqueta.
Si se omite el argumento etiqueta, automáticamente se genera un número
utilizando el contador `enumi'.  La clave-de-cita es cualquier secuencia
de letras, números y signos de puntuación que no contenga una coma.

   Esta instrucción escribe una entrada al archivo `.aux' que contiene
los elementos clave-de-cita y etiqueta.  Cuando la instrucción
`\begin{document}' lee el archivo `.aux', los elementos `etiqueta' son
asociados con `clave-de-cita', produciendo referencias a clave-de-cita
con una instrucción `\cite' (vea la siguiente sección) para producir la
etiqueta asociada.

8.24.2 `\cite'
--------------

Sinopsis:

     \cite[subcita]{claves

   El argumento claves es una lista de una o más claves de cita,
separadas por comas.  Esta instrucción genera una cita en el texto para
referencias asociadas con claves por medio de entradas en el archivo
`.aux'.

   El argumento de texti opcional subcita aparece después de la cita.
Por ejemplo, `\cite[p.~314]{knuth}' podría producir `[Knuth, p. 314]'.

8.24.3 `\nocite'
----------------

`\nocite{lista-de-claves}'

   La instrucción `\nocite' no produce texto, pero escribe en el archivo
`.aux' la `lista-de-claves', que es una lista de una o más etiquetas de
cita.

8.24.4 Usando BibTeX
--------------------

Si usted utiliza el programa BibTeX escrito por Oren Patashnik
(altamente recomendable si necesita una bibliografía de más de un par de
títulos) para mantener su bibliografía, no utilice el entorno
`thebibliography' (*note thebibliography::). En su lugar, incluya las
líneas

     \bibliographystyle{estilo-de-bibliografía}
     \bibliography{archivo-de-bibliografía-1,archivo-de-bibliografía-2}

   La instrucción `\bibliographystyle' por sí misma no produce salida
alguna.  Por el contrario, define el estilo en que se producirá la
bibliografía: estilo-de-bibliografía se refiere a un archivo
`estilo-de-bibliografía.bst', en el que se define qué apariencia tendrán
las citas.  Los nombres de estilo estándar distribuidos con BibTeX son:

`alpha'
     Ordenadas alfabéticamente. Las etiquetas están formadas por el
     nombre del autor y año de publicación.

`plain'
     Ordenadas alfabéticamente. Las etiquetas son numéricas.

`unsrt'
     Al igual que `plain', pero las entradas están en el orden citado.

`abbrv'
     Igual que `plain', pero con etiquetas más compactas.

   Además, existen muchos otros archivos de estilo BibTeX adaptados a
las demandas de diversas publicaciones.  Vea
`http://www.ctan.org/tex-archive/biblio/bibtex/contrib'.

   La instrucción `\bibliography' es la que realmente produce la
bibliografía.  El argumento `\bibliography' se refiere a archivos con el
nombre `archivo-de-bibliografía.bib', el cual debe contener la base de
datos en formato BibTeX.  Sólo las entradas referidas a través de
`\cite' y `\nocite' serán incluidas en la bibliografía.

8.25 `theorem'
==============

Sinopsis:

     \begin{theorem}
     texto-del-teorema
     \end{theorem}

   El entorno `theorem' produce “Teorema n” en negrita seguido por el
texto-del-teorema, donde las posibilidades de numeración para n se
describen bajo `\newtheorem' (*note \newtheorem::).

8.26 `titlepage'
================

Sinopsis:

     \begin{titlepage}
     texto
     \end{titlepage}

   El entorno `titlepage' crea una página de título, es decir, una
página en la cual no se imprime el número de página ni el encabezado.
También provoca que la página siguiente sea numerada como la página uno.
El formato de la página del título se deja bajo su responsabilidad.  La
instrucción `\today' puede ser útil en las páginas de título (*note
\today::).

   Usted puede utilizar la instrucción `\maketitle' (*note \maketitle::)
para producir una página de título estándar sin un entorno `titlepage'.

8.27 `verbatim'
===============

Sinopsis:

     \begin{verbatim}
     texto-literal
     \end{verbatim}

   El entorno `verbatim' es un entorno para crear párrafos en el cual
LaTeX produce exactamente lo que usted escriba en él; Por ejemplo el
carácter `\' produce una `\' impresa.  Este cambia el modo en que LaTeX
imprime los que usted escriba con retornos de carro y espacios en blanco
con el mismo efecto que tendría en una máquina de escribir.

   El entorno `verbatim' utiliza una composición tipográfica con tipo de
letra monoespacio (`\tt').

8.27.1 `\verb'
--------------

Sinopsis:

     \verbcaráctertexto-literalcarácter
     \verb*caráctertexto-literalcarácter

   La instrucción `\verb' compone tipográficamente el texto-literal como
este se ha ingresado incluyendo caracteres especiales y espacios,
utilizando el tipo de letra de máquina de escribir (`\tt').  No se
permiten espacios entre `\verb' o `\verb*' y el carácter delimitador, el
cual comienza y termina el texto literal.  El delimitador no debe
aparecer en el texto-literal.

   La forma con `*' difiere únicamente en que los espacios son impresos
con un carácter de “espacio visible”.

8.28 `verse'
============

Sinopsis:

     \begin{verse}
     línea1 \\
     línea2 \\
     ...
     \end{verse}

   El entorno `verse' está diseñado para poesía, aunque es posible que
usted le encuentre alguna otra utilidad.

   Los márgenes tienen sangría a la izquierda y derecha, a los párrafos
no se les aplica sangría y el texto no está justificado.  Separe las
líneas de cada estrofa con `\\' y use una o más líneas en blanco para
separar las estrofas.

9 Saltos de Línea
*****************

Lo primero que hace LaTeX cuando procesa texto normal es traducir el
archivo de entrada en una secuencia de unidades gráficas y espacios.
Para producir un documento impreso, esta secuencia se debe partir en
líneas (y esas línea se deben dividir en páginas).

   Normalmente LaTeX se encarga de los saltos de línea (y página), pero
en algunos entornos, usted mismo determina los saltos de líneas con la
instrucción `\\', y siempre puede forzar los saltos de línea
manualmente.

9.1 `\\'[*][más-espacio]
========================

La instrucción `\\' le dice a LaTeX que comience una nueva línea.  Esta
tiene un argumento opcional, más-espacio, que especifica la cantidad de
espacio vertical extra que se debe insertar antes de la siguiente línea.
Este puede ser una cantidad negativa.

   La instrucción `\\*' es la misma que la instrucción ordinaria `\\'
salvo que esta le dice a LaTeX que no comience una nueva página después
de la línea.

9.2 `\obeycr' y `\restorecr'
============================

La instrucción `\obeycr' genera un retorno de carro en el archivo de
entrada (`^^M', internamente) lo mismo que `\\' (seguido por `\relax').
Por lo tanto, cada nueva línea en la entrada también será una nueva
línea en la salida.

   `\restorecr' restaura el comportamiento de saltos de línea normal.

9.3 `\newline'
==============

La instrucción `\newline' rompe la línea en el punto actual, sin
justificar el texto anterior.  Sólo se puede utilizar en modo párrafo.

9.4 `\-' (división silábica discrecional)
=========================================

La instrucción `\-' le dice a LaTeX que puede dividir la palabra con un
guión en ese punto.  LaTeX cuenta con una muy buena separación silábica
con guión, y por lo general en la mayoría de los casos encuentra los
puntos correctos en la división de palabras, y casi nunca utiliza uno
incorrecto.  La instrucción `\-' se utiliza para casos excepcionales.

   Cuando usted inserta la instrucción `\-' en una palabra, la palabra
únicamente se debe dividir con guión en esos puntos y en ninguno de los
puntos que LaTeX pudiera haber elegido de otro modo.

9.5 `\fussy'
============

La declaración `\fussy' (que es la predeterminada) provoca que TeX sea
quisquilloso con los saltos de línea.  Esto por lo general también evita
el espacio entre palabras, a costa de un ocasional desbordamiento de
caja.

   Esta instrucción cancela el efecto de una instrucción `\sloppy'
previa (*note \sloppy::.

9.6 `\sloppy'
=============

La declaración `\sloppy' provoca que TeX sea menos cuidadoso con los
saltos de línea. Esto evitará el desbordamiento de cajas, a costa de un
mayor espaciamiento entre palabras.

   Dura hasta que se utilice una instrucción `\fussy' (*note \fussy::).

9.7 `\hyphenation'
==================

Sinopsis:

     \hyphenation{palabra-uno palabra-dos}

   La instrucción `\hyphenation' declara los puntos dónde se permite la
división de palabras por medio de un carácter `-' en las palabras
proporcionadas.  Las palabras están separadas por espacios.  TeX
únicamente debe separar las palabras si la palabra coincide exactamente,
sin juzgar las inflexiones.  Múltiples instrucciones `\hyphenation' son
acumulativas.  Algunos ejemplos (los patrones de separación silábica de
TeX no se aplican a esas palabras):

     \hyphenation{ap-én-dice col-umnas hiper-fragilís-tico-espiali-doso}

9.8 `\linebreak' y `\nolinebreak'
=================================

Sinopsis:

     \linebreak[prioridad]
     \nolinebreak[prioridad]

   De manera predeterminada, la instrucción `\linebreak'
(`\nolinebreak') fuerza (previene) un salto de línea en la posición
actual.  Para `\linebreak', los espacios en la línea se expanden hasta
el margen derecho de la manera normal.

   Con el argumento opcional prioridad, usted puede convertir la
instrucción de una petición a una demanda.  La prioridad debe ser un
número desde 0 hasta 4.  Cuanto mayor sea el número, es más insistente
la petición.

10 Saltos de Página
*******************

LaTeX inicia nuevas páginas asincronicamente, cuando ha acumulado
suficiente material para llenar una página.  Por lo general, esto ocurre
automáticamente, pero a veces, posiblemente, usted quiera influir en los
saltos de página.

10.1 `\cleardoublepage'
=======================

La instrucción `\cleardoublepage' termina la página actual y provoca que
se impriman todas las imágenes y tablas que han aparecido hasta el
momento en el texto.  En un estilo de Impresión a doble cara, este
también hace que la siguiente página sea a mano derecha, página
(impares), produciendo una página en blanco si es necesario.

10.2 `\clearpage'
=================

La instrucción `\clearpage' termina la página actual y provoca que todas
la imágenes y tablas que han aparecido hasta ahora en la entrada sean
impresas.

10.3 `\newpage'
===============

La instrucción `\newpage' termina la página actual, pero no descarga
flotantes (vea `\clearpage' arriba).

10.4 `\enlargethispage'
=======================

`\enlargethispage{tamaño}'

   `\enlargethispage*{tamaño}'

   Amplía el `\textheight' para la página actual por la cantidad
especificada; por ejemplo `\enlargethispage{\baselineskip}' permitirá
una línea adicional.

   La forma favorita trata de apretar el material en la página tanto
como sea posible. Esta normalmente se utiliza junto con un `\pagebreak'
explícito.

10.5 `\pagebreak' y `\nopagebreak'
==================================

Sinopsis:

     \pagebreak[prioridad]
     \nopagebreak[prioridad]

   De forma predeterminada, la instrucción `\pagebreak' (`\nopagebreak')
fuerza (impide) un salto de página en la posición actual.  Para
`\linebreak', el espacio vertical en la página se estira cuanto sea
posible de modo que se extienda hasta el margen inferior normal.

   Con el argumento opcional prioridad, puede convertir la instrucción
`\pagebreak' desde una petición a una demanda.  El número debe ser un
número desde 0 hasta 4.  Cuanto mayor sea el número, más insistente es
la petición.

11 Notas al Pie
***************

Las notas al pie se pueden producir en una de dos maneras.  Se pueden
producir con una sola instrucción, la instrucción `\footnote'.  También
se pueden producir con dos instrucciones, las instrucciones
`\footnotemark' y `\footnotetext'.

11.1 `\footnote'
================

Sinopsis:

     \footnote[número]{texto}

   La instrucción `\footnote' coloca una nota numerada con el texto al
pie de la página actual.  El argumento opcional número cambia el número
predeterminado de la nota.

   Esta instrucción sólo puede utilizarse fuera del modo párrafo; es
decir, no se puede utilizar en el instrucciones de seccionado tal como
`\chapter', en figuras, tablas o en un entorno `tabular'.  (Vea las
siguientes secciones).

11.2 `\footnotemark'
====================

Sin argumento opcional, la instrucción `\footnotemark' coloca el número
de nota actual en el texto.  Esta instrucción se puede utilizar en modo
párrafo.  Usted proporciona el texto de la nota por separado, con la
instrucción `\footnotetext'.

   Esta instrucción se puede utilizar para producir varios marcadores de
nota consecutivos refiriéndose a la misma nota

     \footnotemark[\value{footnote}]

después de la primer instrucción `\footnote'.

11.3 `\footnotetext'
====================

Sinopsis:

     \footnotetext[número]{texto}

   La instrucción `\footnotetext' coloca el texto en la parte inferior
de la página como una nota al pie.  Esta instrucción puede venir en
cualquier lugar después de la instrucción `\footnotemark'.  La
instrucción `\footnotetext' debe aparecer en el exterior del modo
párrafo.

   El argumento opcional número cambia el número predeterminado de la
nota.

11.4 Notas al Pie Simbólicas
============================

Si desea utilizar símbolos para las notas al pie, en lugar de un número
creciente, redefina `\thefootnote' así:

     \renewcommand{\thefootnote}{\fnsymbol{nota-al-pie}}

   La instrucción `\fnsymbol' produce a serie predefinida de símbolos
(*note \alph \Alph \arabic \roman \Roman \fnsymbol::).  Si desea
utilizar un símbolo diferente como su marca de nota al pie, necesitará
redefinir `\fnsymbol'.

11.5 Parámetros para Footnote
=============================

`\footnoterule'
     Produce la línea que separa el texto principal en una página de las
     notas al pie de la página.  Dimensiones predeterminadas: `0.4pt'
     espesor (o ancho), y longitud de `0.4\columnwidth' en las clases de
     documento estándar (salvo en slides, donde esta no aparece).

`\footnotesep'
     La altura donde se coloca el puntal al comienzo de la nota al pie.
     De forma predeterminada, se establece en el puntal del tipo de
     letra normal `\footnotesize' (*note Tamaños del Tipo de Letra::,
     por lo tanto no hay espacio extra entre las notas.  Este es
     `6.65pt' para `10pt', `7.7pt' para `11pt' y `8.4pt' para `12pt'.

12 Definiciones
***************

LaTeX tiene la capacidad para crear nuevas instrucciones de muchos tipos
diferentes.

12.1 `\newcommand' y `\renewcommand'
====================================

`\newcommand' y `\renewcommand' define y redefine una instrucción,
respectivamente.

   Sinopsis:

       \newcommand{instrucción}[n-argumentos]{definición}
     \renewcommand{instrucción}[n-argumentos]{definición}
       \newcommand{instrucción}[n-argumentos][predeterminado]{definición}
     \renewcommand{instrucción}[n-argumentos][predeterminado]{definición}

instrucción
     El nombre de la instrucción comenzando con `\'.  Para
     `\newcommand', este no se debe haber definido y no debe comenzar
     con `\end'; para `\renewcommand', este ya tiene que estar definido.

n-argumentos
     Un entero opcional entre 1 y 9 especificando el número de
     argumentos que debe tomar la instrucción.  El valor predeterminado
     es para que la instrucción no tome argumentos.

predeterminado
     Si este parámetro opcional está presente, significa que el primer
     argumento del comando es opcional.  Cuando se invoca a la nueva
     instrucción, el valor predeterminado del argumento opcional (es
     decir, si no se especifica en la llamada) es la cadena
     `definición'.

definición
     El texto con el que se sustituirá cada aparición de `instrucción';
     una construcción de la forma `#n' en definición es reemplazada por
     el texto del enésimo argumento.

12.2 `\newcounter'
==================

Sinopsis:

     \newcounter{contador}[nombre-contador]

   La instrucción `\newcounter' define un nuevo contador llamado
contador.  El nuevo contador se inicializa a cero.

   Dado el argumento opcional `[nombre-contador]', (contador se
restablecerá cuando nombre-contador se incremente.

   *Note Contadores::, para mayor información.

12.3 `\newlength'
=================

Sinopsis:

     \newlength{\argumento}

   La instrucción `\newlength' define el argumento obligatorio como una
instrucción `length' con un valor de `0in'.  El argumento debe ser una
secuencia de control, como en `\newlength{\foo}'.  Ocurre un error si
`\foo' ya está definido.

   *Note Longitudes::, para saber cómo fijar la nueva longitud a un
valor distinto de cero, y para más información acerca de las longitudes
en general.

12.4 `\newsavebox'
==================

Sinopsis:

     \newsavebox{instrucción}

   Define `\instrucción', el cual debe ser un nombre de instrucción que
no se haya definido, para referirse a una nueva bandeja para almacenar
cajas.

12.5 `\newenvironment' y `\renewenvironment'
============================================

Sinopsis:

       
     \newenvironment{entorno}[n-argumentos]{antes-definición}
                    {después-definición}
       \newenvironment{entorno}[n-argumentos][predeterminado]
                      {antes-definición}{después-definición}
     \renewenvironment{entorno}[n-argumentos]
                      {antes-definición}{después-definición}

   Estas instrucciones definen o redefinen un entorno entorno, es decir,
`\begin{entorno} … \end{entorno}'.

entorno
     El nombre del entorno.  Para `\newenvironment', entorno no debe ser
     un entorno existente, y la instrucción `\entorno' debe ser una que
     no se haya definido previamente.  Para `\renewenvironment', entorno
     debe ser el nombre de un entorno existente.

n-argumentos
     Un entero desde 1 a 9 denotando el número de argumentos del nuevo
     entorno definido.  El valor predeterminado es ningún argumento.

predeterminado
     Si se especifica, el primer argumento es opcional, y predeterminado
     proporciona el valor predeterminado para ese argumento.

antes-definición
     El texto ampliado en cada aparición de `\begin{entorno}'; una
     construcción en forma `#n' en antes-definición es sustituido por el
     texto del enésimo argumento.

después-definición
     El texto ampliado de cada aparición de `\end{entorno}'.  este no
     debe contener ningún argumento para parámetros.

12.6 `\newtheorem'
==================

     \newtheorem{nuevo-entorno}{etiqueta}[con]
     \newtheorem{nuevo-entorno}[numerado-como]{etiqueta}

   Esta instrucción define un entorno parecido a teorema.  Argumentos:

nuevoentorno
     El nombre del nuevo entorno a definir; no debe ser el nombre de un
     entorno existente o de lo contrario será redefinido.

etiqueta
     El texto a imprimir al inicio del entorno, antes del número. Por
     ejemplo, `Teorema'.

numerado_como
     (Opcional).  El nombre de un entorno ya definido tal como teorema;

     (Opcional).  El nombre de un entorno ya definido tal como teorema
     el nuevo entorno será numerado exactamente como numerado_como.

con
     (Opcional). El nombre de un contador definido previamente, una
     unidad de seccionado.  El nuevo contador de teorema será
     restablecido al mismo tiempo que el contador con.

   Cuando menos uno de numerado_como y con se debe especificar, no
ambos.

12.7 `\newfont'
===============

Sinopsis:

     \newfont{instrucción}{nombredetipo}

   Define una secuencia de control `\instrucción', misma que no se debe
haber definido, para hacer que nombredetipo sea el tipo de letra actual.
El archivo bloqueado en el sistema es llamado `nombredetipo.tfm'.

   Esta es una instrucción de bajo nivel para configurar el uso de un
tipo de letra individual.  Comúnmente, los tipos de letra se definen a
través de familias de archivos `.fd'.

12.8 `\protect'
===============

Pies de página, saltos de línea, cualquier instrucción que tenga un
argumento opcional, y muchas más de las así llamadas instrucciones
"frágiles".  Cuando una instrucción frágil se utiliza en ciertos
contextos, llamados "argumentos móviles", estas se deben preceder con
`\protect'.  Además, algunas instrucciones con argumentos frágiles deben
tener su propia `\protect'.

   Algunos ejemplos de argumentos móviles son `\caption' (*note
figure::), `\thanks' (*note \maketitle::) y @-expresiones en entornos
`tabular' y `array' (*note tabular::).

   Las instrucciones que no son frágiles se llaman "robustas".  Estas no
se deben preceder con `\protect'.

   Vea también:

`http://www-h.eng.cam.ac.uk/help/tpl/textprocessing/teTeX/latex/latex2e-html/fragile.html'
`http://www.tex.ac.uk/cgi-bin/texfaq2html?label=protect'

13 Contadores
*************

Cualquier cosa numerada por LaTeX tiene un contador asociado a ella.  El
nombre del contador es el mismo nombre que el nombre del entorno o
instrucción que produce el número, salvo las que no comienzan con `\'.
(`enumi'–`enumiv' se utilizan para entornos enumerados anidados).  A
continuación hay una lista de los contadores utilizados en las clases de
documentos estándar de LaTeX para controlar la numeración.

     part            paragraph       figure          enumi
     chapter         subparagraph    table           enumii
     section         page            footnote        enumiii
     subsection      equation        mpfootnote      enumiv
     subsubsection

13.1 `\alph \Alph \arabic \roman \Roman \fnsymbol': Imprimiendo Contadores
==========================================================================

Todas estas instrucciones toman como argumento un solo contador, por
ejemplo, `\alph{enumi}'.

`\alph'
     imprime contador usando letras minúsculas: `a', `b', ...

`\Alph'
     utiliza letras mayúsculas: `A', `B', ...

`\arabic'
     utiliza números Arábigos: `1', `2', ...

`\roman'
     utiliza números romanos en minúsculas: `i', `ii', ...

`\roman'
     utiliza números romanos en mayúsculas: `I', `II', ...

`\fnsymbol'
     imprime el valor de contador en una secuencia específica de nueve
     símbolos (convencionalmente usada para etiquetar notas al pie de
     página).  El valor de contador debe estar entre 1 y 9 incluido.

     Los símbolos no son compatibles en info principalmente, pero aquí
     están los nombres:

          asterix(*) dagger ddagger section-sign paragraph-sign parallel
          double-asterix(**) double-dagger double-ddagger

13.2 `\usecounter{contador}'
============================

Sinopsis:

     \usecounter{contador}

   La instrucción `\usecounter' se utiliza en el segundo argumento del
entorno `list' para especificar el contador a utilizar para numerar los
elementos de la lista.

13.3 `\value{contador}'
=======================

Sinopsis:

     \value{contador}

   La instrucción `\value' produce el valor de contador.  Esta se puede
utilizar en cualquier lugar en que LaTeX espera un número, por ejemplo:

     \setcounter{micontador}{3}
     \addtocounter{micontador}{1}
     \hspace{\value{micontador}\parindent}

13.4 `\setcounter{\contador}{valor}'
====================================

Sinopsis:

     \setcounter{\contador}{valor}

   La instrucción `\setcounter' fija el valor de \contador al argumento
valor.

13.5 `\addtocounter{contador}{valor}'
=====================================

La instrucción `\addtocounter' incrementa contador por la cantidad
especificada por el argumento valor, que puede ser un número negativo.

13.6 `\refstepcounter{contador}'
================================

La instrucción `\refstepcounter' trabaja de la misma manera que
`\stepcounter' *Note \stepcounter::, excepto que esta además define el
valor actual de `\ref' para que sea el resultado de `\thecounter'.

13.7 `\stepcounter{contador}'
=============================

La instrucción `\stepcounter' añade uno al contador y restablece todos
los contadores subsidiarios.

13.8 `\day \month \year': Contadores Predefinidos
=================================================

LaTeX define contadores para el día del mes (`\day', 1–31), mes del año
(`\month', 1–12), y año (`\year', Era Común).  Al iniciar TeX, estas son
establecidas a los valores actuales en el sistema donde se está
ejecutando TeX.  Estas no se actualizan conforme al progreso del
trabajo.

   La instrucción relacionada `\today' produce una cadena de texto que
representa el día actual (*note \today::).

14 Longitudes
*************

Una `longitud' es una medida de distancia.  Muchas instrucciones LaTeX
toman una longitud como argumento.

14.1 `\setlength{\largo}{valor}'
================================

La instrucción `\setlength' fija el valor de \largo al argumento valor,
el cual se puede expresar en cualquier unidad que LaTeX entienda, es
decir, pulgadas (`in'), milímetros (`mm'), puntos (`pt'), puntos grandes
(`bp', etc.

14.2 \addtolength{\largo}{cantidad}
===================================

La instrucción `\addtolength' incrementa la “instrucción de longitud”
\largo por la cantidad especificada en el argumento cantidad, misma que
puede ser un valor negativo.

14.3 `\settodepth'
==================

`\settodepth{\gnat}{texto}'

   La instrucción `\settodepth' fija el valor de una instrucción de
`longitud' igual a la profundidad del argumento `texto'.

14.4 `\settoheight'
===================

`\settoheight{\gnat}{texto}'

   La instrucción `\settoheight' fija el valor de la instrucción de
`longitud' igual a la altura del argumento `texto'.

14.5 `\settowidth{\largo}{texto}'
=================================

La instrucción `\settowidth' establece el valor del la instrucción
\largo al valor del argumento texto.

14.6 Longitudes Predeterminadas
===============================

`\width'

   `\height'

   `\depth'

   `\totalheight'

   Estos parámetros de longitud se pueden utilizar en los argumentos de
las instrucciones que dibujan cajas (*note Cajas::). Especifican el
ancho natural, etc., del texto en la caja. `\totalheight' es igual a
`\height' + `\depth'. Para hacer una caja con el texto extendido hasta
el doble del tamaño natural, por ejemplo, digamos

   `\makebox[ancho\2]{Consiga una camilla}'

15 Haciendo Párrafos
********************

Un párrafo se termina por medio de una o más líneas completamente en
blanco —líneas que no contienen incluso un `%'.  Una línea en blanco no
debe aparecer donde no se puede iniciar un nuevo párrafo, tal como en
modo math o en el argumento de una instrucción de seccionado.

15.1 `\indent'
==============

`\indent' produce un espacio horizontal donde el ancho es igual al ancho
de la longitud de `\parindent', la sangría de un párrafo normal.  Esta
se utiliza para añadir la sangría de párrafos donde esta debería
suprimirse en otro caso.

   El valor predeterminado para `\parindent' es `1em' en modo de dos
columnas, de lo contrario `15pt' para documentos de `10pt', `17pt' para
`11pt' y `1.5em' para `12pt'.

15.2 `\noindent'
================

Cuando se utiliza al principio de un párrafo, `\noindent' suprime
cualquier sangría.  Esta no tiene efecto cuando se utiliza en medio de
un párrafo.

15.3 `\parskip'
===============

`\parskip' es una instrucción que preserva la longitud definiendo
espacio vertical extra añadido antes de cada párrafo.  El predeterminado
es `0pt más 1pt'.

15.4 Notas al Margen
====================

Sinopsis:

     \marginpar[izquierda]{derecha}

   La instrucción `\marginpar' crea una nota en el margen.  La primera
línea de una nota tiene que ser la misma línea base que la línea en el
texto donde ocurre el `\marginpar'.

   Cuando únicamente se especifica el argumento obligatorio right, el
texto se deberá colocar

   • en el margen derecho para diseños de un solo lado;

   • en el margen externo para diseños de dos caras;

   • en el margen más cercano en diseños de dos columnas.

   La instrucción `\reversemarginpar' coloca las subsecuentes notas al
margen en el margen (dentro) opuesto.  `\normalmarginpar' las coloca en
la posición predeterminada.

   Cuando se especifican ambos argumentos, se utiliza left para el
margen izquierdo y se utiliza right para el margen derecho.

   La primer palabra normalmente no se debe separar con guiones; usted
puede habilitar la separación silábica con guiones comenzando la nota
con `\hspace{0pt}'.

   Los parámetros que afectan el formato de la nota son:

`\marginparpush'
     El espacio mínimo vertical entre notas; el predeterminado es `7pt'
     para documentos de `12pt', de lo contrario `5pt'.

`\marginparsep'
     Espacio horizontal entre el texto vertical y la nota;
     predeterminado `11pt' para `10pt' documentos, en otro caso `10pt'.

`\marginparwidth'
     El ancho de la nota en sí misma; el predeterminado para documentos
     de un solo lado de `10pt' es `90pt', `83pt' para `11pt' y `68pt'
     para `12pt'; `17pt' más en cada caso para documentos de dos caras.
     En el modo de dos columnas, el predeterminado es `48pt'.

16 Fórmulas Matemáticas
***********************

Existen tres entornos que ponen a LaTeX en modo math:

`math'
     Para fórmulas que aparecerán directamente en el texto.

`displaymath'
     Para fórmulas que aparecerán en su propia línea.

`equation'
     El mismo que el del entorno displaymath salvo que este añade un
     número de ecuación en el margen derecho.

   El entorno `math' se pude utilizar tanto en párrafos como en modo LR,
pero los entornos `displaymath' y `equation' se pueden utilizar
únicamente en modo párrafo.  Los entornos `math' y `displaymath' se
utilizan tan a menudo que tienen las siguientes formas abreviadas:

     \(...\)   en lugar de   \begin{math}...\end{math}
     \[...\]   en lugar de   \begin{displaymath}...\end{displaymath}

   De hecho, el entorno `math' es como una instrucción que tiene incluso
una forma abreviada:

     $ ... $   en lugar de   \(...\)

   La instrucción `\boldmath' cambia letras y símbolos matemáticos en
tipo de letra en negrita.  Este se utiliza _fuera_ del modo math.  Por
el contrario, la instrucción `\unboldmath' cambia los glifos matemáticos
para estar en un tipo de letra normal; este también se utiliza _fuera_
del modo math.

   La declaración `\displaystyle' presiona para que el tamaño y estilo
de la fórmula sea el de `displaymath', por ejemplo, con limites por
encima y debajo de sumatorias.  Por ejemplo
     $\displaystyle \sum_{n=0}^\infty x_n $

16.1 Subíndices y Superíndices
==============================

Para hacer que una expresión exp aparezca como un subíndice, escriba
`_{'exp`}'.  Para hacer que exp aparezca como un exponente, escriba
`^{'exp`}'. LaTeX maneja superíndices, subíndices y todas esas cosas de
manera natural.  Incluso hace lo correcto cuando algo tiene tanto un
subíndice como un superíndice.

16.2 Símbolos Matemáticos
=========================

LaTeX proporciona casi cualquier símbolo matemático que muy
probablemente necesite. Las instrucciones para generarlas se pueden
utilizar únicamente en modo math.  Por ejemplo, si incluye `$\pi$' en su
archivo fuente, aparecerá el símbolo de pi (\pi) en su salida.

`\|'
     \|

`\aleph'
     \aleph

`\alpha'
     \alpha

`\amalg'
     \amalg (operación binaria)

`\angle'
     \angle

`\approx'
     \approx (relación)

`\ast'
     \ast (operación binaria)

`\asymp'
     \asymp (relación)

`\backslash'
     \ (delimitador)

`\beta'
     \beta

`\bigcap'
     \bigcap

`\bigcirc'
     \bigcirc (operación binaria)

`\bigcup'
     \bigcup

`\bigodot'
     \bigodot

`\bigoplus'
     \bigoplus

`\bigotimes'
     \bigotimes

`\bigtriangledown'
     \bigtriangledown (operación binaria)

`\bigtriangleup'
     \bigtriangleup (operación binaria)

`\bigsqcup'
     \bigsqcup

`\biguplus'
     \biguplus

`\bigcap'
     \bigvee

`\bigwedge'
     \bigwedge

`\bot'
     \bot

`\bowtie'
     \bowtie (relación)

`\Box'
     (símbolo de caja cuadrada abierta)

`\bullet'
     \bullet (operación binaria)

`\cap'
     \cap (operación binaria)

`\cdot'
     \cdot (operación binaria)

`\chi'
     \chi

`\circ'
     \circ (operación binaria)

`\clubsuit'
     \clubsuit

`\cong'
     \cong (relación)

`\coprod'
     \coprod

`\cup'
     \cup (operación binaria)

`\dagger'
     \dagger (operación binaria)

`\dashv'
     \dashv (relación)

`\ddagger'
     \dagger (operación binaria)

`\Delta'
     \Delta

`\delta'
     \delta

`\Diamond'
     \diamond más grande

`\diamond'
     \diamond (operación binaria)

`\diamondsuit'
     \diamondsuit

`\div'
     \div (operación binaria)

`\doteq'
     \doteq (relación)

`\downarrow'
     \downarrow (delimitador)

`\Downarrow'
     \Downarrow (delimitador)

`\ell'
     \ell

`\emptyset'
     \emptyset

`\epsilon'
     \epsilon

`\equiv'
     \equiv (relación)

`\eta'
     \eta

`\exists'
     \exists

`\flat'
     \flat

`\forall'
     \forall

`\frown'
     \frown (relacion)

`\Gamma'
     \Gamma

`\gamma'
     \gamma

`\ge'
     \ge

`\geq'
     \geq (relación)

`\gets'
     \gets

`\gg'
     \gg (relación)

`\hbar'
     \hbar

`\heartsuit'
     \heartsuit

`\hookleftarrow'
     \hookleftarrow

`\hookrightarrow'
     \hookrightarrow

`\iff'
     \iff

`\Im'
     \Im

`\in'
     \in (relación)

`\infty'
     \infty

`\int'
     \int

`\iota'
     \iota

`\Join'
     símbolo de corbata de moño condensado (relación)

`\kappa'
     \kappa

`\Lambda'
     \Lambda

`\lambda'
     \lambda

`\land'
     \land

`\langle'
     \langle (delimitador)

`\lbrace'
     \lbrace (delimitador)

`\lbrack'
     \lbrack (delimitador)

`\lceil'
     \lceil (delimitador)

`\le'
     \le

`\leadsto'

`\Leftarrow'
     \Leftarrow

`\leftarrow'
     \leftarrow

`\leftharpoondown'
     \leftharpoondown

`\leftharpoonup'
     \leftharpoonup

`\Leftrightarrow'
     \Leftrightarrow

`\Leftrightarrow'
     \Leftrightarrow

`\leq'
     \leq (relación)

`\lfloor'
     \lfloor (delimitador)

`\lhd'
     (flecha apuntando hacia arriba a la izquierda)

`\ll'
     \ll (relación)

`\lnot'
     \lnot

`\longleftarrow'
     \longleftarrow

`\longleftrightarrow'
     \longleftrightarrow

`\longmapsto'
     \longmapsto

`\longrightarrow'
     \longrightarrow

`\lor'
     \lor

`\mapsto'
     \mapsto

`\mho'

`\mid'
     \mid (relación)

`\models'
     \models (relación)

`\mp'
     \mp (operación binaria)

`\mu'
     \mu

`\nabla'
     \nabla

`\natural'
     \natural

`\ne'
     \ne

`\nearrow'
     \nearrow

`\neg'
     \neg

`\neq'
     \neq (relación)

`\ni'
     \ni (relación)

`\not'
     Superpone una / al siguiente operador, tal como \not=.

`\notin'
     \ni

`\nu'
     \nu

`\nwarrow'
     \nwarrow

`\odot'
     \odot (operación binaria)

`\oint'
     \oint

`\Omega'
     \Omega

`\omega'
     \omega

`\ominus'
     \ominus (operación binaria)

`\oplus'
     \oplus (operación binaria)

`\oslash'
     \oslash (operación binaria)

`\otimes'
     \otimes (operación binaria)

`\owns'
     \owns

`\parallel'
     \parallel (relación)

`\partial'
     \partial

`\perp'
     \perp (relación)

`\phi'
     \phi

`\Pi'
     \Pi

`\pi'
     \pi

`\pm'
     \pm (operación binaria)

`\prec'
     \prec (relación)

`\preceq'
     \preceq (relación)

`\prime'
     \prime

`\prod'
     \prod

`\propto'
     \propto (relación)

`\Psi'
     \Psi

`\psi'
     \psi

`\rangle'
     \rangle (delimitador)

`\rbrace'
     \rbrace (delimitador)

`\rbrack'
     \rbrack (delimitador)

`\rceil'
     \rceil (delimitador)

`\Re'
     \Re

`\rfloor'
     \rfloor

`\rhd'
     (operación binaria)

`\rho'
     \rho

`\Rightarrow'
     \Rightarrow

`\rightarrow'
     \rightarrow

`\rightharpoondown'
     \rightharpoondown

`\rightharpoonup'
     \rightharpoonup

`\rightleftharpoons'
     \rightleftharpoons

`\searrow'
     \searrow

`\setminus'
     \setminus (operación binaria)

`\sharp'
     \sharp

`\Sigma'
     \Sigma

`\sigma'
     \sigma

`\sim'
     \sim (relación)

`\simeq'
     \simeq (relación)

`\smallint'
     \smallint

`\smile'
     \smile (relación)

`\spadesuit'
     \spadesuit

`\sqcap'
     \sqcap (operación binaria)

`\sqcup'
     \sqcup (operación binaria)

`\sqsubset'
     (relación)

`\sqsubseteq'
     \sqsubseteq (relación)

`\sqsupset'
     (relación)

`\sqsupseteq'
     \sqsupseteq (relación)

`\star'
     \star (operación binaria)

`\subset'
     \subset (relación)

`\subseteq'
     \subseteq (relación)

`\succ'
     \succ (relación)

`\succeq'
     \succeq (relación)

`\sum'
     \sum

`\supset'
     \supset (relación)

`\supseteq'
     \supseteq (relación)

`\surd'
     \surd

`\swarrow'
     \swarrow

`\tau'
     \tau

`\theta'
     \theta

`\times'
     \times (operación binaria)

`\to'
     \to

`\top'
     \top

`\triangle'
     \triangle

`\triangleleft'
     \triangleleft (operación binaria)

`\triangleright'
     \triangleright (operación binaria)

`\unlhd'
     punta de flecha apuntando hacia la izquierda con una línea debajo
     (operación binaria)

`\unrhd'
     punta de flecha apuntando hacia la derecha con línea debajo
     (operación binaria)

`\Uparrow'
     \Uparrow (delimitador)

`\uparrow'
     \uparrow (delimitador)

`\Updownarrow'
     \Updownarrow (delimitador)

`\updownarrow'
     \updownarrow (delimitador)

`\uplus'
     \uplus (operación binaria)

`\Upsilon'
     \Upsilon

`\upsilon'
     \upsilon

`\varepsilon'
     \varepsilon

`\varphi'
     \varphi

`\varpi'
     \varpi

`\varrho'
     \varrho

`\varsigma'
     \varsigma

`\vartheta'
     \vartheta

`\vdash'
     \vdash (relation)

`\vee'
     \vee (operación binaria)

`\Vert'
     \Vert (delimitador)

`\vert'
     \vert (delimitador)

`\wedge'
     \wedge (operación binaria)

`\wp'
     \wp

`\wr'
     \wr (operación binaria)

`\Xi'
     \Xi

`\xi'
     \xi

`\zeta'
     \zeta

16.3 Funciones Matemáticas
==========================

Estas instrucciones producen nombres de función romanos en modo math con
el espaciado adecuado.

`\arccos'
     \arccos

`\arcsin'
     \arcsin

`\arctan'
     \arctan

`\arg'
     \arg

`\bmod'
     Operador residuo binario (x \bmod y)

`\cos'
     \cos

`\cosh'
     \cosh

`\cot'
     \cos

`\coth'
     \cosh

`\csc'
     \csc

`\deg'
     \deg

`\det'
     \deg

`\dim'
     \dim

`\exp'
     \exp

`\gcd'
     \gcd

`\hom'
     \hom

`\inf'
     \inf

`\ker'
     \ker

`\lg'
     \lg

`\lim'
     \lim

`\liminf'
     \liminf

`\limsup'
     \limsup

`\ln'
     \ln

`\log'
     \log

`\max'
     \max

`\min'
     \min

`\pmod'
     residuo entre paréntesis, como en (\pmod 2^n - 1)

`\Pr'
     \Pr

`\sec'
     \sec

`\sin'
     \sin

`\sinh'
     \sinh

`\sup'
     \sup

`\tan'
     \tan

`\tanh'
     \tanh

16.4 Acentos Matemáticos
========================

LaTeX proporciona una variedad de instrucciones para producir letras
acentuadas en matemáticas.  Son distintas de los acentos en un texto
normal (*note Acentos::).

`\acute'
     Acento agudo en modo Math: \acute{x}.

`\bar'
     Acento barra horizontal (macrón) en modo Math: \bar{x}.

`\breve'
     Acento breve en modo Math: \breve{x}.

`\check'
     Acento de verificación háček en modo Math: \check{x}.

`\ddot'
     Acento diéresis en modo Math: \ddot{x}.

`\dot'
     Acento punto superior en modo Math: \dot{x}.

`\grave'
     Acento grave en modo Math: \grave{x}.

`\hat'
     Acento circunflejo en modo Math: \hat{x}.

`\imath'
     i sin punto en modo Math.

`\jmath'
     j sin punto en modo Math.

`\tilde'
     Acento tilde en modo Math: \tilde{x}.

`\vec'
     Símbolo de vector en modo Math: \vec{x}.

`\widehat'
     Acento circunflejo amplio en modo Math: \widehat{x+y}.

`\widetilde'
     Acento tilde amplia en modo Math: \widetilde{x+y}.

16.5 Espacios en Modo Math
==========================

En un entorno `math', LaTeX ignora los espacios que usted escriba y
coloca espacios de acuerdo a las reglas normales para texto matemático.
Si desea un espaciado diferente, LaTeX proporciona las siguientes
instrucciones para su uso en modo matemático:

`\;'
     Un espacio de grosor (5\over18\,cuádruple).

`\:'
`\>'
     Ambos producen un espacio medio (2\over9\,cuádruple).

`\,'
     Un espacio fino (1\over6\,cuádruple); no se limita a modo
     matemático.

`\!'
     Un espacio fino negativo (-{1\over6}\,cuádruple).

16.6 Miscelánea Math
====================

`\*'
     Un símbolo de multiplicación “discrecional”, en el que se permiten
     saltos de línea.

`\cdots'
     Puntos suspensivos horizontales con los puntos elevados al centro
     de la línea.

`\ddots'
     Puntos suspensivos en diagonal: \ddots.

`\frac{num}{den}'
     Produce la fracción `num' dividida entre `den'.

`\left delimitador1 ... \right delimitador2'
     Los dos delimitadores no necesitan coincidir; `.' actúa como un
     delimitador nulo, sin producir salida.  Los delimitadores son del
     tamaño de acuerdo a las matemáticas en el medio.  Ejemplo: `\left(
     \sum_i=1^10 a_i \right]'.

`\overbrace{texto}'
     Genera un par de texto más.  Por ejemplo, \overbrace{x+\cdots+x}^{k
     \rm\;veces}.

`\overline{texto}'
     Genera una línea horizontal sobre texo.  Por ejemplo,
     \overline{x+y}.

`\sqrt[raíz]{argumento}'
     Produce la representación de la raíz cuadrada de argumento.  El
     argumento opcional raíz determina qué raíz producir.  Por ejemplo,
     la raíz cúbica de `x+y' se escribe como `$\sqrt[3]{x+y}$'.

`\stackrel{texto}{relación}'
     Coloca el texto sobre la relación.

     Por ejemplo, `\stackrel{f}{\longrightarrow}'.

`\underbrace{matemáticas}'
     Genera matemáticas con una llave por debajo.

`\underline{text}'
     Provoca que se subraye el texto, el cual bien puede estar en modo
     math o no.  La línea siempre está por debajo del texto, teniendo en
     cuenta los descendientes.

`\vdots'
     Produce puntos suspensivos verticales.

17 Modos
********

Cuando LaTeX está procesando el texto fuente, este siempre está en uno
de tres modos:

   • Modo Párrafo

   • Modo Math

   • Modo de Izquierda a derecha (Left-to-Right), llamado modo LR para
     abreviar

   LaTeX cambia el modo sólo cuando sube o baja una escala a un
diferente nivel, aunque no todos los cambios de nivel producen cambios
de modo.  Los cambios de modo sólo se producen al entrar o salir de un
entorno, o cuando LaTeX está procesando el argumento de determinadas
instrucciones que producen texto.

   El “modo Párrafo” es el más común; es en el que LaTeX está cuando
procesa texto ordinario.  En ese modo, LaTeX rompe el texto en líneas y
separa líneas en páginas.  LaTeX está en “modo math” cuando está
generando fórmulas matemáticas.  En “modo LR”, como en modo párrafo,
LaTeX considera que la salida que produce es una cadena de palabras con
espacios entre ellas.  Sin embargo, a diferencia del modo párrafo, LaTeX
sigue yendo de izquierda a derecha; nunca inicia una nueva línea en modo
LR.  Incluso si usted pone un centenar de palabras en una `\mbox', LaTeX
mantendrá la composición de izquierda a derecha dentro de una caja
única, y luego se quejará porque la caja resultante fue demasiado grande
para caber en la línea.

   LaTeX está en modo LR cuando comienza a hacer una caja con una
instrucción `\mbox'.  Usted puede conseguir introducirse en un modo
diferente dentro de la caja —por ejemplo, usted puede hacerlo entrar en
el modo matemático para poner una fórmula en la caja.  También hay
varias instrucciones productoras de texto y entornos para hacer una caja
que ponga a LaTeX en el modo de párrafo.  La caja hecha por medio de una
de estas instrucciones o entornos se llama `parbox'.  Cuando LaTeX está
en el modo de párrafo mientras que hace una caja, se dice que está en
“modo interno de párrafo”.  Su modo de párrafo normal, que se inicia
fuera de él, se llama el “modo de párrafo externo”.

18 Estilos de Página
********************

La instrucción `\documentclass' determina el tamaño y posición de las
cabeceras y pies de página.  El estilo de página determina lo que sucede
en ellos.

18.1 `\maketitle'
=================

La instrucción `\maketitle' genera un título en una página independiente
— excepto en la clase `article', donde se coloca el título en la parte
superior de la primera página.  La información utilizada para producir
el título se obtiene de las siguientes declaraciones:

`\author{nombre \and nombre2}'
     La instrucción `\author' declara los autor(es) del documento, donde
     el argumento es una lista de autores separados por instrucciones
     `\and'.  Use `\\' para separar líneas con una única entrada de
     autor —por ejemplo, para proporcionar las entidades de autor o
     dirección.

`\date{texto}'
     La instrucción `\date' declara el texto para ser la fecha del
     documento.  Sin la instrucción `\date', se utiliza la fecha actual
     (*note \today::).

`\thanks{texto}'
     La instrucción `\thanks' produce un pie de página (`\footnote')
     para el título, normalmente utilizada para reconocimiento de
     créditos.

`\title{texto}'
     La instrucción `\title' declara texto para ser el título del
     documento.  Use `\\' para forzar un salto de línea, de la manera
     usual.

18.2 `\pagenumbering'
=====================

Sinopsis:

     \pagenumbering{estilo}

   Especifica el estilo de los números de página, de acuerdo a estilo:

`arabic'
     números arábigos

`roman'
     números romanos en minúscula

`Roman'
     numeros romanos en mayúscula

`alph'
     letras en minúscula

`Alph'
     letras en mayúscula

18.3 `\pagestyle'
=================

Sinopsis:

     \pagestyle{estilo}

   La instrucción `\pagestyle' especifica como se componen
tipográficamente las cabeceras y pies de página a partir de la página
actual.  Valores para estilo:

`plain'
     Únicamente un número de página sencillo.

`empty'
     Cabeceras y pies  de página vacíos, por ejemplo, sin números de
     página.

`headings'
     Coloca encabezados en cada página.  El estilo de documento
     especifica lo que sucede en las cabeceras.

`myheadings'
     Cabeceras personalizadas, especificadas via las instrucciones
     `\markboth' o `\markright'.

   Aquí están las descripciones de `\markboth' y `\markright':

`\markboth{izquierda}{derecha}'
     Establece ambas cabeceras izquierda y derecha.  Una “cabecera a
     mano izquierda” (izquierda) es generada por la última instrucción
     `\markboth' antes del final de la página, mientras que una
     “cabecera a mano derecha” (derecha) es generada por la primera
     `\markboth' o `\markright' que venga en la página si la hay, de
     otra manera por la última antes de la página.

`\markright{derecha}'
     Establece la cabecera de la derecha, dejando la cabecera de la
     izquierda sin cambios.

18.4 `\thispagestyle{estilo}'
=============================

La instrucción `\thispagestyle' trabaja de la misma manera que la
instrucción `\pagestyle' (vea la sección previa) excepto que esta
únicamente cambia el estilo de la página actual.

19 Espacios
***********

LaTeX tiene muchas formas de producir espacios en blanco (o llenos).

   Otra instrucción que produce espacios es `\' para producir un espacio
“fino” (por lo general 1/6cuadrático).  Se puede utilizar en modo texto,
pero más a menudo es útil en modo matemático (*note Espacios en Modo
Math::).

19.1 `\hspace'
==============

Sinopsis:

     \hspace[*]{longitud}

   La instrucción `\hspace' añade espacio horizontal.  El argumento
length se puede expresar en cualquier término que LaTeX entienda:
puntos, pulgadas, etc.  Esta es la longitud a preservar.  Usted puede
agregar tanto espacios negativos como positivos con una instrucción
`\hspace'; agregar espacio negativo es como espacio hacia atrás.

   LaTeX normalmente elimina el espacio horizontal que viene al
principio o al final de una línea.  Para preservar este espacio, use la
forma opcional con `*'.

19.2 `\hfill'
=============

La instrucción `\hfill' produce un “relleno de longitud” que no tiene
espacio natural sino que se puede extender o reducir en sentido
horizontal en la medida necesaria.

   El parámetro `\fill' es la misma longitud a rellenar (técnicamente,
el valor a agregar `0pt plus1fill'); es decir, `\hspace\fill' es
equivalente a `\hfill'.

19.3 `\SPACE'
=============

La instrucción `\ ' (space) produce un espacio entre palabras normal.
Es útil después de signos de puntuación que no deben terminar una
oración.  Por ejemplo, `Knuth's article in Proc.\ Amer.\ Math\. Soc.\ es
fundamental'.  Esta también se suele utilizar después de secuencias de
control, como en `\TeX\ es un sistema agradable'.

   En circunstancias normales, `\'<tab> y `\'<newline> son equivalentes
a `\ '.

19.4 `\@'
=========

La instrucción `\@' hace que el siguiente carácter de puntuación final
una declaración incluso si normalmente no es así.  Esto se suele
utilizar después de una letra mayúscula.  Aquí están lado a lado
ejemplos con y sin `\@':

     … en C\@.  Pascal, aunque …
     … en C.  Pascal, aunque …

produce

     … en C.  Pascal, aunque … … en C.  Pascal, aunque …

19.5 `\thinspace'
=================

`\thinspace' produce un espacio inviolable e inextensible que es de un
1/6 de em.  Este es el espacio adecuado para su uso en citas anidadas,
como en '”.

19.6 `\/'
=========

La instrucción `\/' produce una "corrección en cursiva".  Este es un
pequeño espacio definido por el diseñador de tipografías para un
carácter determinado, para evitar chocar con el carácter que lo sigue.
El carácter en cursiva f típicamente tiene un valor de corrección en
cursiva grande.

   Si el siguiente carácter es un punto o una coma, no es necesario
insertar una corrección en cursiva, dado que estos símbolos tienen una
puntuación de muy poca altura.  Sin embargo, con punto y coma o dos
puntos, así como letras normales, puede ayudar. Compare f: f; (en la
salida TeX, las `f's están separadas correctamente) con f: f;.

   A pesar del nombre, los caracteres latinos también pueden tener una
corrección en cursiva.  Compare pdfTeX (en la TeX salida, hay un pequeño
espacio después de la `f') con pdfTeX.

19.7 `\hrulefill'
=================

La instrucción `\hrulefill' produce un “relleno de longitud” el cual se
puede estrechar o estirar horizontalmente.  Este se llenará con una
regla horizontal.

19.8 `\dotfill'
===============

La instrucción `\dotfill' produce un “relleno de longitud” la cual se
rellena con puntos en lugar de sólo espacios en blanco.

19.9 `\addvspace'
=================

`\addvspace{longitud}'

   La instrucción `\addvspace' normalmente añade un espacio vertical de
altura longitud.  Sin embargo, si el espacio vertical ya se ha añadido
al mismo punto en la salida por medio de una instrucción `\addvspace'
anterior, esta instrucción no añade más espacio que el necesario para
hacer que la longitud natural del espacio vertical total equivalente a
`longitud'.

19.10 `\bigskip \medskip \smallskip'
====================================

Estas instrucciones producen una determinada cantidad de espacio.

`\bigskip'
     Al igual que `\vspace{bigskipamount}', normalmente alrededor de un
     espacio de línea (con estirar y encoger).

`\medskip'
     Al igual que `\vspace{medskipamount}', normalmente cerca de la
     mitad del espacio de una línea (con estirar y encoger).

`\smallskip'
     Al igual que `\vspace{smallskipamount}', normalmente alrededor de
     un cuarto del espacio de una línea (con estirar y encoger).

   Los parámetros `\...cantidad' están determinados por la clase de
documento.

19.11 `\vfill'
==============

La instrucción `\vfill' produce un relleno de longitud (pegado) el cual
se puede reducir y estirar verticalmente tanto como sea necesario.  Este
es equivalente a `\vspace{\fill}' (*note \hfill::).

19.12 `\vspace[*]{longitud}'
============================

Sinopsis:

     \vspace[*]{longitud}

   La instrucción `\vspace' añade el espacio vertical length, es decir,
un relleno de longitud.  longitud puede ser positivo o negativo.

   Normalmente, LaTeX remueve el espacio vertical añadido por `\vspace'
en la parte superior o inferior de una página.  Con el argumento
opcional `*', no se elimina el espacio.

20 Cajas
********

Todos los parámetros de longitud predeterminados (*note Longitudes
Predeterminadas::) se pueden utilizar en los argumentos de las
instrucciones que generan cajas.

20.1 `\mbox{texto}'
===================

La instrucción `\mbox' crea una caja lo suficientemente ancha para
contener el texto creado por sus argumentos.  El texto no se separa en
líneas, por lo tanto este se puede utilizar para prevenir la separación
silábica.

20.2 `\fbox' y `\framebox'
==========================

Sinopsis:

     \fbox{texto}
     \framebox[ancho][posición]{texto}

   Las instrucciones `\fbox' y `\framebox' son como `\mbox', excepto que
estas ponen un marco al rededor del exterior de la caja que se está
creando.

   Además, la instrucción `\framebox' permite especificar explícitamente
la anchura de la caja con el argumento opcional width (una dimensión), y
la posiciona con el argumento opcional posición.

   Ambas instrucciones producen una regla de espesor `\fboxrule'
(predeterminado a `.4pt'), y dejan un espacio de `\fboxsep'
(predeterminado a `3pt') entre la regla y el contenido de la caja.

   *Note \framebox (imagen)::, para la instrucción `\framebox' en el
entorno `picture'.

20.3 `lrbox'
============

`\begin{lrbox}{instrucción} texto \end{lrbox}'

   Esta es la forma de entorno de `\sbox'.

   El texto dentro del entorno se guarda en la caja `instrucción', misma
que se debe haber declarado con `\newsavebox'.

20.4 `\makebox'
===============

Sinopsis:

     \makebox[ancho][posición]{texto}

   La instrucción `\makebox' crea una caja lo suficientemente ancha para
contener el texto especificado.  La anchura de la caja es especificada
por el argumento opcional ancho.  La posición del texto dentro de la
caja está determinada por el argumento opcional posición, el cual puede
tomar los siguientes valores:

`c'
     Centrado (predeterminado).

`l'
     Alineado a la izquierda

`r'
     Alineado a la derecha

`s'
     Alineado (justificado) a través de ancho; texto debe contener
     espacio elástico para que esto funcione.

   `\makebox' también se utiliza en el entorno picture *note \makebox
(imagen)::.

20.5 `\parbox'
==============

Sinopsis:

     \parbox[posición][alto][pos-interna]{ancho}{texto}

   La instrucción `\parbox' produce una caja cuyo contenido es creado en
modo `paragraph'.  Se debe utilizar para hacer una caja de pequeñas
piezas de texto, sin nada lujoso en el interior.  En particular, no debe
utilizar ningún entorno que genere párrafos dentro de un argumento
`\parbox'.  Para grandes piezas de texto, incluyendo aquellas que
contienen un entorno que genera párrafos, debe usar un entorno
`minipágina' (*note minipage::).

   `\parbox' tiene dos argumentos obligatorios:

ancho
     la anchura de parbox;

texto
     El texto que va dentro de la parbox.

   El argumento opcional posición le permite alinear la línea en la
parte superior o inferior de parbox con la línea base del texto que lo
rodea (de manera predeterminada es superior).

   El argumento opcional alto reemplaza la altura natural de la caja.

   Al argumento pos-interior controla la ubicación del texto dentro de
la caja de la siguiente manera; Si no se especifica, se utiliza
posición.

`t'
     El texto es colocado en la parte superior de la caja.

`c'
     El texto se coloca al centro de la caja.

`b'
     El texto se coloca en la parte inferior de la caja.

`s'
     Se extiende verticalmente; el texto debe contener espacio vertical
     extensible para que esto funcione.

20.6 `\raisebox'
================

Sinopsis:

     \raisebox{distancia}[alto][profundidad]{texto}

   La instrucción `\raisebox' aumenta o disminuye el texto.  El primer
argumento obligatorio especifica a qué altura se va a levantar (o bajar
si la cantidad es negativa) el texto.  El texto mismo es procesado en
modo LR.

   Los argumentos opcionales alto y profundidad son dimensiones.  Si se
especifican, LaTeX trata a texto como una ampliación de una distancia
determinada sobre la línea base (alto) o bajo (profundidad), omitiendo
su altura y profundidad natural.

20.7 `\savebox'
===============

Sinopsis:

     \savebox{\instrucción-caja}[ancho][posición]{texto}

   Esta instrucción fija la tipografía de texto en una caja al igual que
`\makebox' (*note \makebox::), excepto que el lugar de imprimir la caja
resultante, esta la guarda en la caja etiquetada \instrucción-caja, que
se debe haber declarado con `\newsavebox' (*note \newsavebox::).

20.8 `\sbox{\instrucción-caja}{texto}'
======================================

Sinopsis:

     \sbox{\instrucción-caja}{texto}

   `\sbox' escribe el texto en una caja tal como `\mbox' (*note \mbox::)
excepto que en lugar de incluir la caja resultante en la salida normal,
esta la guarda en la caja etiquetada \instrucción-caja.
\instrucción-caja se debió declarar previamente con `\newsavebox' (*note
\newsavebox::).

20.9 `\usebox{\instrucción-caja}'
=================================

Sinopsis:

     \usebox{\instrucción-caja}

   `\usebox' produce la caja guardada más recientemente en el depósito
\instrucción-caja por una instrucción `\savebox' (*note \savebox::).

21 Inserciones Especiales
*************************

LaTeX proporciona instrucciones para insertar caracteres que tienen un
significado especial que no corresponde a caracteres simples que usted
puede escribir.

21.1 Caracteres Reservados
==========================

Los siguientes caracteres desempeñan un papel especial en LaTeX y se
llaman “caracteres reservados” o “caracteres especiales”.

     # $ % & ~ _ ^ \ { }

   Siempre que escriba en su archivo uno de estos caracteres, LaTeX debe
hacer algo especial.  Si simplemente desea imprimir el carácter en sí
mismo, incluya un carácter `\' anteponiéndolo a este.  Por ejemplo, `\$'
debe producir `$' en su salida.

   Una excepción a esta regla es la `\' misma, debido a que `\' tiene su
propio significado especial (dependiente del contexto).  Una \ romana es
producida al escribir `$\backslash$' en su archivo, y una `\' de máquina
de escribir es producida usando `\' en una instrucción verbatim (*note
verbatim::).

   Además, `\~' y `\^' colocan acentos tilde y circunflejo sobre la
siguiente letra, como en õ y ô (*note Acentos::); Para obtener una `~' o
`^' independiente, usted puede utilizar una instrucción verbatim.

   Por último, puede acceder a cualquier carácter del tipo de letra
actual una vez que sepa su número utilizando la instrucción `\symbol'.
Por ejemplo, el carácter de espacio visibles utilizada en la instrucción
`\verb*' tiene el código decimal 32, por lo tanto se puede escribir como
`\symbol{32}'.

   También puede especificar números octales con `'' o números
hexadecimales con `"', por lo que el ejemplo anterior también se podría
escribir como `\symbol{'40}' o `\symbol{"20}'.

21.2 Símbolos de Texto
======================

LaTeX proporciona instrucciones para generar una serie símbolos
distintos de letras, en el texto.  Algunos de estos, especialmente los
más oscuros, no están disponibles en OT1; posiblemente tenga que cargar
el paquete `textcomp'.

`\copyright'
`\textcopyright'
     El símbolo de copyright, ©.

`\dag'
     El símbolo daga (en texto).

`\ddag'
     El símbolo doble daga (en texto).

`\LaTeX'
     El logotipo de LaTeX.

`\guillemotleft («)'
`\guillemotright (»)'
`\guilsinglleft (‹)'
`\guilsinglright (›)'
     Comillas tipográficas angulares dobles y simples, utilizadas
     comúnmente en Francés: «, », ‹, ›.

`\ldots'
`\dots'
`\textellipsis'
     Puntos suspensivos (tres puntos en la línea base): `…'.  `\ldots' y
     `\dots' también trabajan en modo math.

`\lq'
     Comilla izquierda (de apertura): `.

`\P'
`\textparagraph'
     Signo de párrafo (antígrafo).

`\pounds'
`\textsterling'
     Libras esterlinas en Inglés: £.

`\quotedblbase („)'
`\quotesinglbase (‚)'
     Simple y dobles comillas en la línea base: „ y ‚.

`\rq'
     Comilla derecha (de cierre): '.

`\S'
     Símbolo de sección.

`\TeX'
     El logotipo de TeX.

`\textasciicircum'
     Circunflejo ASCII: ^.

`\textasciitilde'
     Tilde ASCII: ~.

`\textasteriskcentered'
     Asterisco centrado: *.

`\textbackslash'
     Barra inversa: \.

`\textbar'
     Barra Vertical: |.

`\textbardbl'
     Doble barra vertical.

`\textbigcircle'
     Símbolo círculo grande.

`\textbraceleft'
     Llave izquierda: {.

`\textbraceright'
     Llave derecha: }.

`\textbullet'
     Bala: •.

`\textcircled{letra}'
     letra en un círculo, como en ®.

`\textcompwordmark'
`\textcapitalwordmark'
`\textascenderwordmark'
     Marca de palabra compuesta (invisible).  La forma `\textcapital...'
     tiene la tapa del tipo de letra, mientras que la forma
     `\textascender...'  tiene el ascender superior.

`\textdagger'
     Daga: \dag.

`\textdaggerdbl'
     Daga doble: \ddag.

`\textdollar (o `$')'
     Signo de Dólar: $.

`\textemdash (o `---')'
     Em-dash: — (para puntuación).

`\textendash (o `--')'
     En-dash: — (para rangos).

`\texteuro'
     El Símbolo del Euro: €.

`\textexclamdown (o `!`')'
     Signo de exclamación inicial: ¡.

`\textgreater'
     Mayor que: >.

`\textless'
     Menor que: <.

`\textleftarrow'
     Flecha izquierda.

`\textordfeminine'
`\textordmasculine'
     Símbolos ordinales femenino y masculino: ª, º.

`\textordfeminine'
     Símbolo ordinal femenino: ª.

`\textperiodcentered'
     Punto centrado: \cdot.

`\textquestiondown (o `?`')'
     Signo de interrogación inicial: ¿.

`\textquotedblleft (o ```')'
     Comillas dobles de apertura: “.

`\textquotedblright (o `'')'
     Dobles comillas de cierre: ”.

`\textquoteleft (o ``')'
     Comilla de apertura simple: `.

`\textquoteright (o `'')'
     Comilla de cierre simple: '.

`\textquotestraightbase'
`\textquotestraightdblbase'
     Líneas rectas simples y dobles en la línea base.

`\textregistered'
     Símbolo de marca registrada: ®.

`\textrightarrow'
     Flecha hacia la derecha.

`\textthreequartersemdash'
     em-dash de “Tres cuartos”, entre en-dash y em-dash.

`\texttrademark'
     Símbolo de marca comercial: ^{\hbox{TM}}.

`\texttwelveudash'
     Xx 12u-.

`\textunderscore'
     Subrayado: _.

`\textvisiblespace'
     Símbolo de espacio visible.

21.3 Acentos
============

LaTeX tiene un amplio apoyo para muchos de los guiones de idiomas del
mundo, a través del paquete `babel' y de apoyo relacionados.  Esta
sección no pretende abarcar todas con las que es compatible.  Este
simplemente se limita a enumerar las principales instrucciones LaTeX
para crear caracteres acentuados.

   Las instrucciones `\capital...' producen formas alternativas para su
uso con letras mayúsculas.  Estas no están disponibles con OT1.

`\"'
`\capitaldieresis'
     Produce una diéresis, como en ö.

`\''
`\capitalacute'
     Produce un acento agudo, como en ó.  En el entorno `tabbing',
     empuja la columna actual a la derecha de la columna anterior (*note
     tabbing::).

`\.'
     Produce un punto como acento sobre la siguiente, como en ȯ.

`\='
`\capitalmacron'
     Produce un acento macrón (una barra) sobre el siguiente, como en ō.

`\^'
`\capitalcircumflex'
     Produce un acento circunflejo (sombrero) sobre la siguiente, como
     en ô.

`\`'
`\capitalgrave'
     Produce un acento grave sobre la siguiente, como en ò.  En el
     entorno `tabbing', mueve el siguiente texto hacia el margen derecho
     (*note tabbing::).

`\~'
`\capitaltilde'
     Produce una tilde como acento sobre la siguiente, como en ñ.

`\b'
     Produce una barra como acento sobre la siguiente, como en o̲.

`\c'
`\capitalcedilla'
     Produce una cedilla como acento sobre la siguiente, como en ç.

`\d'
`\capitaldotaccent'
     Produce un círculo como acento sobre la siguiente, como en ọ.

`\H'
`\capitalhungarumlaut'
     Produce un acento diéresis húngaro sobre la siguiente, como en ő.

`\i'
     Produce una i sin punto, como en `ı'.

`\j'
     Produce una j sin punto, como en `j'.

`\k'
`\capitalogonek'
     Produce una letra con colita, como en `ǫ'.  No disponible en la
     codificación OT1.

`\r'
`\capitalring'
     Produce un anillo como acento, como en `o̊'.

`\t'
`\capitaltie'
`\newtie'
`\capitalnewtie'
     Produce una atadura con el siguiente como acento, como en `oo['.
     La forma `\newtie' está centrada en su caja.

`\u'
`\capitalbreve'
     Produce un acento breve, como en `ŏ'.

`\underbar'
     No es exactamente un acento, este produce una barra en el argumento
     texto.  El argumento siempre se procesa en modo horizontal.  La
     barra siempre está en una posición fija en la línea base, por lo
     que cruza a través de los trazos descendentes.  Vea también
     `\underline' en *note Miscelánea Math::.

`\v'
`\capitalcaron'
     Produce un acento háček (anticircunflejo, carón), como en `ǒ'.

21.4 Caracteres no Ingleses
===========================

Estas son las instrucciones LaTeX básicas para insertar los caracteres
más usados en idiomas distintos del Inglés.

`\aa'
`\AA'
     å y Å.

`\ae'
`\AE'
     æ y Æ.

`\dh'
`\DH'
     Letra eth islandesa: ð y Ð.

`\dj'
`\DJ'
     xxxx

`\ij'
`\IJ'
     ij y IJ (salvo que un poco más juntas que como aparecen aquí).

`\l'
`\L'
     ł y Ł.

`\ng'
`\NG'
     xxxx

`\o'
`\O'
     ø y Ø.

`\oe'
`\OE'
     œ y Œ.

`\ss'
`\SS'
     ß y SS.

`\th'
`\TH'
     Letra espina Islandesa: þ y Þ.

21.5 `\rule'
============

Sinopsis:

     \rule[aumentar]{ancho}{espesor}

   La instrucción `\rule' produce "reglas", que son, líneas o
rectángulos.  Los argumentos son:

aumentar
     Qué tanto aumentar la regla (opcional).

ancho
     La longitud de la regla (obligatorio).

espesor
     El espesor de la regla (obligatorio).

21.6 `\today'
=============

La instrucción `\today' produce la fecha de hoy, en formato `mes dd,
aaaa'; por ejemplo, `Julio 04 1976'.  Utiliza los contadores
predefinidos `\day', `\month', y `\year' (*note \day \month \year::)
para hacerlo.  No se actualiza cuando se ejecuta el programa.

   El paquete `datetime', entre otros, puede producir una amplia
variedad de formatos de fecha.

22 Dividiendo la Entrada
************************

Un documento de gran tamaño requiere una gran cantidad de insumos.  En
lugar de poner toda la entrada en un único archivo de gran tamaño, es
más eficiente dividirlo en varios más pequeños.  Independientemente del
número de archivos separados que utilice, hay uno que es el archivo
raíz; este es cuyo nombre se escribe cuando se ejecuta LaTeX.

22.1 `\include'
===============

Sinopsis:

     \include{archivo}

   No hay presente una instrucción `\includeonly', la instrucción
`\include' executa `\clearpage' para iniciar una nueva página (*note
\clearpage::), entonces lee el archivo, y luego hace otro `\clearpage'.

   Dada una instrucción `\includeonly', las acciones `\include'
únicamente se ejecutan si archivo está listado como un argumento para
`\includeonly'.  Consulte la siguiente sección.

   La instrucción `\include' no puede aparecer en el preámbulo o en un
archivo leído por otra instrucción `\include'.

22.2 \`includeonly'
===================

Sinopsis:

     \includeonly{archivo1,archivo2,...}

   La instrucción `\includeonly' controla cuales archivos se deben leer
en subsecuentes instrucciones `\include'.  La lista de nombres de
archivo se separa con comas. Cada archivo debe coincidir exactamente con
un nombre de archivo especificado en una instrucción `\include' para una
selección eficaz.

   Esta instrucción únicamente puede aparecer en el preámbulo.

22.3 \input
===========

Sinopsis:

     \input{archivo}

   La instrucción `\input' provoca que el archivo especificado sea leído
y procesado, tal como si su contendido se hubiera insertado en ese punto
en el archivo actual.

   Si archivo no termina en `.tex ' (por ejemplo, `foo' o `foo.bar'),
primero se intenta con esa extensión (`foo.tex' o `foo.bar.tex').  Si no
se encuentra, el archivo original se intenta con (`foo' o `foo.bar').

23 Asuntos de Portada/Contraportada
***********************************

23.1 Tablas de Contenido
========================

Se produce una tabla de contenido con la instrucción `\tableofcontents'.
Usted pone la instrucción adecuada donde desea que aparezca la tabla de
contenido; LaTeX hace el resto para usted.  Una ejecución previa habrá
generado un archivo `.toc'.

   La instrucción `\tableofcontents' produce una sección, pero no inicia
una nueva página automáticamente.  Si desea una nueva página después de
la tabla de contenido, escriba una instrucción código `\newpage' después
de la instrucción `\tableofcontents'.

   Las instrucciones análogas `\listoffigures' y `\listoftables'
producen una lists de figuras y una lista de tablas, respectivamente.
Cada una funciona exactamente igual que la tabla de contenido.

   La instrucción `\nofiles' reemplaza estas instrucciones, e _impide_
que se genere cualquiera de estas listas.

23.1.1 \addcontentsline
-----------------------

La instrucción `\addcontentsline'{extensión}{undad}{texto} añade una
entrada a la lista o tabla donde:

extensión
     La extensión del archivo en el que se va a escribir la información,
     por lo general una de: `toc' (tabla de contenido), `lof' (lista de
     figuras) o `lot' (lista de tablas).

unidad
     El nombre de la unidad de sección a añadir, normalmente una de las
     siguientes, coincidiendo con el valor del argumento extensión:

     `toc'
          El nombre de la unidad de sección: `part', `chapter',
          `section', `subsection', `subsubsection'.

     `lof'
          Para la lista de figuras.

     `lot'
          Para la lista de tablas.

texto
     El texto real de la entrada.

   La instrucción que realmente escribe al archivo `.extensión' es la
instrucción `\contentsline{undad}{nombre}'.

23.1.2 \addtocontents
---------------------

La instrucción `\addtocontents'{extensión}{texto} añade texto (o
instrucciones de formato) directamente al archivo `.extensión' que
genera la tabla de contenido o listas de figuras o tablas.

extensión
     La extensión del archivo en el cual escribir la información: `toc'
     (tabla de contenido), `lof' (lista de figuras) o `lot' (lista de
     tablas).

texto
     El texto a escribir.

23.2 Glosarios
==============

La instrucción `\makeglossary' habilita la creación de glosarios.

   La instrucción `\glossary{texto}' escribe una entrada en el glosario
para texto a un archivo auxiliar con la extensión `.glo'.

   Específicamente, la instrucción que escribe es
`\glossaryentry{texto}{no-de-página}', donde no-de-página es el valor de
`\thepage'.

   El paquete `glossary' en CTAN proporciona compatibilidad para
glosarios más sofisticados.

23.3 Índices
============

La instrucción `\makeindex' permite la creación de índices.  Coloquela
en el preámbulo.

   La instrucción `\index{texto}' escribe una entrada en el índice para
texto en un archivo auxiliar con la extensión `.idx'.

   Específicamente, la instrucción que escribe la entrada es
`\indexentry{texto}{no-de-página}', donde no-de-página es el valor
actual de `\thepage'.

   Para generar una entrada de índice para `bar' que diga `Vea foo',
utilice una barra vertical: `\index{bar|see{foo}}'.  Use `seealso' en
lugar de `see' para producir una entrada `Vea también'.

   El texto `Vea' está definido por la macro `\seename', y `Vea también'
por la macro `\alsoname'.  Estas se pueden redefinir para otros idiomas.

   El archivo `.idx' generado luego es ordenado con una instrucción
externa, por lo general alguna instrucción `makeindex'
(`http://mirror.ctan.org/indexing/makeindex') o (la de múltiples
idiomas) `xindy' (`http://xindy.sourceforge.net').  Esto resulta en un
archivo `.ind', que se puede leer para componer tipográficamente el
índice.

   El índice normalmente se genera con la instrucción `\printindex'.
Esta instrucción está definida en el paquete `makeidx', por lo tanto
necesita colocar en el preámbulo la instrucción `\usepackage{makeidx}'.

   La longitud de relleno `\indexspace' se inserta antes de cada nueva
letra en el índice impreso; letra en el índice impreso su valor
predeterminado es `10pt plus5pt minus3pt'.

   El paquete `showidx' hace que cada entrada en el índice se muestre en
el margen de la página donde aparece la entrada.  Esto puede ayudar en
la preparación del índice.

   El paquete `multind' es compatible con múltiples índices.  Vea
también la entrada de este tema en las preguntas frecuentes de TeX, en

   `http://www.tex.ac.uk/cgi-bin/texfaq2html?label=multind'.

24 Cartas
*********

Usted puede utilizar LaTeX para componer tipográficamente cartas, para
ambas personales y de negocios.  La clase de documento `letter' está
diseñada para hacer una serie de cartas a la vez, aunque se puede hacer
sólo una si así lo desea.

   Su archivo fuente `.tex' tiene las mismas instrucciones mínimas de
clase que en cualquier otro documento, es decir, debe tener las
siguientes instrucciones como mínimo:

      \documentclass{letter}
      \begin{document}
       ... cartas ...
      \end{document}

   Cada carta es un entorno `letter', cuyo argumento es el nombre y
dirección del destinatario.  Por ejemplo, usted podría tener:

      \begin{letter}{Sr. José Pérez\\ Calle Princesa N°2345.
           \\ Edinburgo, EH1 1AA}
        ...
      \end{letter}

   La carta en sí comienza con la instrucción `\opening'.  Siguiéndole
el texto de la carta.  Este se escribe como una entrada de LaTeX
ordinaria.  Las instrucciones que no tienen sentido en una carta, como
`\chapter', no funcionan.  La carta se cierra con una instrucción
`\closing'.

   Después de `closing', usted puede colocar material adicional.  La
instrucción `\cc' produce el usual “cc: …”.  También hay una instrucción
`\encl' similar para una lista de destinatarios. Con ambas
instrucciones, use `\\' para separar los elementos.

   Estas instrucciones se utilizan con la clase `letter'.

24.1 \address{dirección-del-remitente}
======================================

La instrucción `\address' especifica la dirección del remitente de la
carta, como debería aparecer en la carta y el sobre.  Separa las líneas
de la dirección que deben estar separadas por instrucciones `\\'.

   Si usted no proporciona una declaración `\address', entonces, se
aplicará a la carta el formato de copia en papel con el membrete
estándar de su organización.  (*Note Descripción::, para obtener
detalles sobre la implementación local).  Si usted proporciona una
declaración `\address', entonces, la carta será formateada como una
carta personal.

24.2 `\cc'
==========

Sinopsis:

     \cc{nombre\\nombre2}

   Produce una lista de nombres a quienes enviar copias de la carta.
Cada nombre se imprime en una línea separada.

24.3 `\closing'
===============

Sinopsis:

     \closing{texto}

   Una carta se cierra con la instrucción `\closing', por ejemplo,
     \closing{Muy Atentamente,}

24.4 `\encl'
============

Sinopsis:

     \encl{línea1\\línea2}

   Declara una lista de más de un documento adjunto.

24.5 `\location'
================

`\location{dirección}'

   Esta modifica la dirección estándar de su organización.  Esto sólo
aparece si el estilo de página `firstpage' está seleccionado.

24.6 `\makelabels'
==================

`\makelabels{número}'

   Si ejecuta esta instrucción en el preámbulo, LaTeX creará una hoja de
etiquetas con las direcciones. Esta hoja se emitirá antes que las
cartas.

24.7 `\name'
============

`\name{June Davenport}'

   Su nombre, utilizado en la impresión del sobre junto con la dirección
del remitente.

24.8 `\opening{texto}'
======================

Sinopsis:

     \opening{texto}

   Una carta comienza con la instrucción `\opening'.  El argumento
obligatorio, texto, es el texto con el que desea iniciar su carta.  Por
ejemplo:

     \opening{Estimado José,}

24.9 `\ps'
==========

Use la instrucción `\ps' para iniciar una posdata en una carta, después
de `\closing'.

24.10 `\signature{texto}'
=========================

Su nombre, como debe aparecer al final de la carta debajo del espacio
para su firma.  `\\' inicia una nueva línea dentro de texto como de
costumbre.

24.11 `\startbreaks'
====================

`\startbreaks'

   Se usa después de una instrucción `\stopbreaks' para permitir de
nuevo los saltos de página.

24.12 `\stopbreaks'
===================

`\stopbreaks'

   Inhibe saltos de página hasta que aparezca una instrucción
`\startbreaks'.

24.13 `\telephone'
==================

`\telephone{número}'

   Este es su número de teléfono.  Este sólo aparece si el estilo de
página `firstpage' está seleccionado.

25 Entrada/Salida a la Terminal
*******************************

25.1 `\typein[instrucción]{mensaje}'
====================================

Sinopsis:

     \typein[\instrucción]{mensaje}

   `\typein' imprime el mensaje en la terminal y provoca que LaTeX se
detenga y espere para que usted escriba una línea de entrada, terminando
con “Intro”.  Si se omite el argumento opcional \instrucción, la entrada
escrita se procesa como si se hubiera incluido en el archivo de entrada
en lugar de la instrucción `\typein'.  Si está presente el argumento
\instrucción, debe ser el nombre de una instrucción.  Este nombre de
instrucción entonces define o redefine la entrada escrita.

25.2 `\typeout{mensaje}'
========================

Sinopsis:

     \typeout{mensaje}

   Imprime el `mensaje' en la terminal y en el archivo `log'.  Las
instrucciones en el `mensaje' que están definidas con `\newcommand' o
`\renewcommand' (entre otras) se sustituyen por su definición antes de
ser impresas.

   Las reglas habituales de LaTeX para el tratamiento de varios espacios
como un espacio único e ignorando espacios después de un nombre de
instrucción también se aplican al `mensaje'.  Una instrucción `\space'
en `mensaje' provoca la impresión de un espació sencillo,
independientemente de los espacios circundantes.  Una `^^J' en `mensaje'
imprime una nueva línea.

26 Línea de Órdenes
*******************

La especificación de archivo de entrada indica el archivo al cual
aplicar formato; TeX usa `.tex' como extensión predeterminada.  Si se
omite el archivo de entrada completamente, TeX acepta entrada desde la
terminal.  Usted especifica opciones de instrucción mediante el
suministro de una cadena como un parámetro para la instrucción; por
ejemplo,

     latex '\nonstopmode\input foo.tex'

debe procesar `foo.tex' sin hacer una pausa después de cada error.

   Si LaTeX se detiene en medio del documento y le muestra un indicador
`*', está esperando por una entrada.  Usted puede escribir `\stop' (e
Intro) y este terminará el documento prematuramente.

Appendix A Plantillas de Documento
**********************************

Aunque no es material de referencia, tal vez estas plantillas de
documento serán de utilidad.

A.1 Plantilla `book'
====================

\documentclass{book}
\usepackage[spanish]{babel}        % Para escribir en Español normal
\usepackage[utf8]{inputenc}        % Codificación de caracteres
\title{Plantilla de Clase Book}
\author{Autor Alex}

\begin{document}
\maketitle

\chapter{Primero}
Algún texto.

\chapter{Segundo}
Algún otro texto.

\section{Un subtema}
El final.
\end{document}

A.2 Plantilla `beamer'
======================

La clase `beamer' crea diapositivas de presentaciones.

\documentclass{beamer}
\usepackage[spanish]{babel}        % Para escribir en Español normal
\usepackage[utf8]{inputenc}        % Codificación de caracteres

\title{Plantilla de Clase Beamer}
\author{Autor Alex}
\date{Julio 31, 2010}

\begin{document}

\maketitle

% sin [fragile], cualquier código {verbatim} provoca errores misteriosos.
\begin{frame}[fragile]
 \frametitle{Primer Diapositiva}

\begin{verbatim}
  ¡Esto está en \verbatim!
\end{verbatim}

\end{frame}

\end{document}

A.3 Plantilla `tugboat'
=======================

`TUGboat' es el diario del Grupo de Usuarios de TeX,
`http://tug.org/TUGboat'.

\documentclass{ltugboat}  % para procedimientos ltugproc

\usepackage[spanish]{babel}        % Para escribir en Español normal
\usepackage[utf8]{inputenc}        % Codificación de caracteres
\usepackage{graphicx}
\usepackage{ifpdf}
\ifpdf
  \usepackage[breaklinks,colorlinks,linkcolor=black,citecolor=black,
              urlcolor=black]{hyperref}
\else
  \usepackage{url}
\fi

\begin{document}

\title{Ejemplo de Articulo Regular \TUB\}

% repetir información para cada autor.
\author{First Last}
\address{Street Address \\ Town, Postal \\ Country}
\netaddress{user (at) ejemplo dot org}
\personalURL{http://ejemplo.org/~user/}

\maketitle

% El resumen en ltugboat viene después de \maketitle.
\begin{abstract}
Este es un ejemplo del tema de un artículo \TUB{} ordinario.
\end{abstract}

\section{Introducción}

Este es un artículo de ejemplo para \TUB, de
\url{http://tug.org/TUGboat/location.html}.

Recomendamos el paquete graphicx para inclusión de imágenes y el
paquete hyperref para urls activas (en la salida \acro{PDF}).  \TUB\ se
produce utilizando archivos \acro{PDF} exclusivamente, en la actualidad.

Las clases \texttt{ltug*} proporcionan estas abreviaturas, entre muchas
otras:

{\small
\begin{verbatim}
\AllTeX \AMS \AmS \AmSLaTeX \AmSTeX \aw \AW
\BibTeX \CandT \CTAN \DTD \DVItoVDU \HTML
\ISBN \ISSN \JTeX \JoT \LAMSTeX \LaTeXe
\Mc \mf \MFB \mtex \pcMF \PCTeX \pcTeX \Pas
\PiC \PiCTeX \plain \POBox \PS
\SC \SGML \SliTeX \TANGLE \TB \TP \TUB \TUG
\tug \UG \UNIX \VAX \VorTeX \XeT \WEB \WEAVE

\Dash \dash \vellipsis \bull \cents \Dag
\careof \thinskip

\acro{FRED} -> {\sc fred}  % ¡Por favor úselas!
\cs{fred}   -> \fred
\env{fred}  -> \begin{fred}
\meta{fred} -> <fred>
\nth{n}     -> 1st, 2nd, ...
\sfrac{3/4} -> 3/4
\booktitle{Libro de Fred}
\end{verbatim}
}

Para mayor información, consulte el documento en ltubguid:
\url{http://mirror.ctan.org/macros/latex/contrib/tugboat}

Correo electrónico \verb|tugboat@tug.org| si incurre en problemas o tiene
dudas.



\bibliographystyle{plain}  % recomendamos el estilo de bibliografía plain
\nocite{book-minimal}      % solo hace que la bibliografía no esté vacía
\bibliography{xampl}       % xampl.bib viene con BibTeX


\makesignature  % no en ltugproc
\end{document}

Índice de Conceptos
*******************

Índice de Instrucciones
***********************

