install.txt -*-text-*- Time-stamp: <pdc 1995-02-23>

			   INSTALLING PDCMAC

1. GNERIC INSTALLATION

	The file "contents.txt" gives a list of all the files (except
	itself) with their sizes in bytes.

	The macro files are packaged with their documentation in "dtx"
	files (the LaTeX 2e distribution uses files with the same suffix
	for a similar purpose).  

	You do not need Docstrip or LaTeX to unpack these files; all you
	need is a copy of "pdccode.tex".  Just run plain TeX on the
	"dtx" files to generate the macro files and the printed
	documentation all at the same time.  

	Then put the macro files somewhere where TeX can find them.  For
	systems with the new TeX Directory Structure this directory
	might be "$texmf/tex/plain/pdcmac/"; for UNIXTeX 6.1 it might be
	"$texmf/tex/plain/"; for older TeX it might be "$tex/inputs" or
	"$tex/macros".

	You may want to put the DVI files and the DTX files together in
	a documentation directory if you have one.  On TDS systems this
	might be "$texmf/doc/pdcmac/".


2. UNIX SYSTEMS

	For the benefit of people on UNIX systems I can supply a
	Makefile template and a configuration script.  The conventions
	for the config scriopt are based on the GNU Coding Standards.

(1) Configuration.  Run the command "./configure" (you may need to say
	"sh configure"); this is a shell script that attempts to guess
	sensible values for things like "texdir" (the directory to put
	TeX macro files).  It generates a shellscript "config.status"
	which records the current configuration; running it recreates
	the "Makefile".

	The "configure" script understands the following options.
	*You should not need to specify any of these.*

    -n, -nocreate, --nocreate
	Make  "config.status" but don't run it to generate "Makefile".

    -h, -help, --help
	Print a summary of options.

    -pDIR, -prefix DIR, --prefix=DIR 
	Set the "prefix" for directory names.  FOr example, "-p/usr"
	indcates that TeX files are under "/usr/texmf" or "/usr/tex" or
	somesuch.
	
    -sDIR, -srcdir DIR, --srcdir=DIR
	Tell "configure" where the source files are.  This is used when
	building the package in a different directory.   Normally even
	in this case "configure" can guess the cirrect dierctory by
	examining $0.

    -tDIR, -texdir DIR, --texdir=DIR
	Tell "configure" where TeX files are (this makes -p redundant).
	For example "-t/usr/texmf".

    -wtds, -with tds, --with-tds
	Tell "configure" you have a new-style TeX Directory Structure.
	Usually "configure" can guess correctly.

	Other options are ignored.

(2) Run "make".  The makefile generated by "configure" is tested with
	GNU "make".  The makefile understands the following conventional
	targets: 

    "make" 
	Generates all the "tex" macro files, and runs TeX on the other 
	documentation files. 

    "make install"
	Copies the macro files into TeX's macros directory, and the DVI
	files into the $docdir.

    "make uninstall"
	Deletes the files that would be created by "make install".

    "make mostlyclean|clean|distclean|realclean" 
	Delete files made from source files.  "mostlyclean" removes the
	ones that are generated most often; "realclean" removes even
	those that are rarely deleted.
